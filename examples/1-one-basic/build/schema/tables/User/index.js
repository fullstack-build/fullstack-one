"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("@fullstack-one/graphql");
const expressions_1 = require("../../expressions");
const Post_1 = require("../Post");
exports.user = new graphql_1.Table("User", "soniq");
const userId = new graphql_1.IdColumn();
const firstName = new graphql_1.GenericColumn("firstName", "text", { nullable: true });
const lastName = new graphql_1.GenericColumn("lastName", "text", { nullable: true });
exports.posts = new graphql_1.OneToManyColumn("posts", () => Post_1.owner);
const currentUser = new graphql_1.ComputedColumn("currentUser", () => expressions_1.currentUserId);
const gender = new graphql_1.EnumColumn("gender", ["male", "female", "diverse"], { nullable: true });
const age = new graphql_1.GenericColumn("age", "int", { defaultExpression: "0" });
exports.user.addColumn(0, userId, expressions_1.anyone);
exports.user.addColumn(1, firstName, expressions_1.anyone);
exports.user.addColumn(2, lastName, expressions_1.ownerById);
exports.user.addColumn(3, exports.posts, expressions_1.anyone);
exports.user.addColumn(4, currentUser, expressions_1.anyone);
exports.user.addColumn(5, gender, expressions_1.anyone);
exports.user.addColumn(8, age, expressions_1.anyone);
exports.user.addMutation(new graphql_1.CreateMutation("Me", [firstName, lastName], [expressions_1.anyone]));
exports.user.addMutation(new graphql_1.UpdateMutation("Me", [userId, firstName, lastName], [expressions_1.ownerById]));
// user.addMutation(new DeleteMutation(userId, [ownerById]));
exports.user.addIndex(new graphql_1.Index([firstName, lastName], { isUniqueIndex: true }));
exports.user.addCheck(new graphql_1.Check(`("firstName" !~~ \'%fuck%\'::text)`));
