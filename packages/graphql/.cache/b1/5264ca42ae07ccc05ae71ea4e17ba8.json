{"id":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","dependencies":[{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/package.json","includedInParent":true,"mtime":1581593944909},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/package.json","includedInParent":true,"mtime":1580380995860},{"name":"../core/Formatter","loc":{"line":5,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/Formatter.js"},{"name":"../core/Tokenizer","loc":{"line":9,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/Tokenizer.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _Formatter = require(\"../core/Formatter\");\n\nvar _Formatter2 = _interopRequireDefault(_Formatter);\n\nvar _Tokenizer = require(\"../core/Tokenizer\");\n\nvar _Tokenizer2 = _interopRequireDefault(_Tokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar reservedWords = [\"A\", \"ACCESSIBLE\", \"AGENT\", \"AGGREGATE\", \"ALL\", \"ALTER\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"AT\", \"ATTRIBUTE\", \"AUTHID\", \"AVG\", \"BETWEEN\", \"BFILE_BASE\", \"BINARY_INTEGER\", \"BINARY\", \"BLOB_BASE\", \"BLOCK\", \"BODY\", \"BOOLEAN\", \"BOTH\", \"BOUND\", \"BULK\", \"BY\", \"BYTE\", \"C\", \"CALL\", \"CALLING\", \"CASCADE\", \"CASE\", \"CHAR_BASE\", \"CHAR\", \"CHARACTER\", \"CHARSET\", \"CHARSETFORM\", \"CHARSETID\", \"CHECK\", \"CLOB_BASE\", \"CLONE\", \"CLOSE\", \"CLUSTER\", \"CLUSTERS\", \"COALESCE\", \"COLAUTH\", \"COLLECT\", \"COLUMNS\", \"COMMENT\", \"COMMIT\", \"COMMITTED\", \"COMPILED\", \"COMPRESS\", \"CONNECT\", \"CONSTANT\", \"CONSTRUCTOR\", \"CONTEXT\", \"CONTINUE\", \"CONVERT\", \"COUNT\", \"CRASH\", \"CREATE\", \"CREDENTIAL\", \"CURRENT\", \"CURRVAL\", \"CURSOR\", \"CUSTOMDATUM\", \"DANGLING\", \"DATA\", \"DATE_BASE\", \"DATE\", \"DAY\", \"DECIMAL\", \"DEFAULT\", \"DEFINE\", \"DELETE\", \"DESC\", \"DETERMINISTIC\", \"DIRECTORY\", \"DISTINCT\", \"DO\", \"DOUBLE\", \"DROP\", \"DURATION\", \"ELEMENT\", \"ELSIF\", \"EMPTY\", \"ESCAPE\", \"EXCEPTIONS\", \"EXCLUSIVE\", \"EXECUTE\", \"EXISTS\", \"EXIT\", \"EXTENDS\", \"EXTERNAL\", \"EXTRACT\", \"FALSE\", \"FETCH\", \"FINAL\", \"FIRST\", \"FIXED\", \"FLOAT\", \"FOR\", \"FORALL\", \"FORCE\", \"FROM\", \"FUNCTION\", \"GENERAL\", \"GOTO\", \"GRANT\", \"GROUP\", \"HASH\", \"HEAP\", \"HIDDEN\", \"HOUR\", \"IDENTIFIED\", \"IF\", \"IMMEDIATE\", \"IN\", \"INCLUDING\", \"INDEX\", \"INDEXES\", \"INDICATOR\", \"INDICES\", \"INFINITE\", \"INSTANTIABLE\", \"INT\", \"INTEGER\", \"INTERFACE\", \"INTERVAL\", \"INTO\", \"INVALIDATE\", \"IS\", \"ISOLATION\", \"JAVA\", \"LANGUAGE\", \"LARGE\", \"LEADING\", \"LENGTH\", \"LEVEL\", \"LIBRARY\", \"LIKE\", \"LIKE2\", \"LIKE4\", \"LIKEC\", \"LIMITED\", \"LOCAL\", \"LOCK\", \"LONG\", \"MAP\", \"MAX\", \"MAXLEN\", \"MEMBER\", \"MERGE\", \"MIN\", \"MINUS\", \"MINUTE\", \"MLSLABEL\", \"MOD\", \"MODE\", \"MONTH\", \"MULTISET\", \"NAME\", \"NAN\", \"NATIONAL\", \"NATIVE\", \"NATURAL\", \"NATURALN\", \"NCHAR\", \"NEW\", \"NEXTVAL\", \"NOCOMPRESS\", \"NOCOPY\", \"NOT\", \"NOWAIT\", \"NULL\", \"NULLIF\", \"NUMBER_BASE\", \"NUMBER\", \"OBJECT\", \"OCICOLL\", \"OCIDATE\", \"OCIDATETIME\", \"OCIDURATION\", \"OCIINTERVAL\", \"OCILOBLOCATOR\", \"OCINUMBER\", \"OCIRAW\", \"OCIREF\", \"OCIREFCURSOR\", \"OCIROWID\", \"OCISTRING\", \"OCITYPE\", \"OF\", \"OLD\", \"ON\", \"ONLY\", \"OPAQUE\", \"OPEN\", \"OPERATOR\", \"OPTION\", \"ORACLE\", \"ORADATA\", \"ORDER\", \"ORGANIZATION\", \"ORLANY\", \"ORLVARY\", \"OTHERS\", \"OUT\", \"OVERLAPS\", \"OVERRIDING\", \"PACKAGE\", \"PARALLEL_ENABLE\", \"PARAMETER\", \"PARAMETERS\", \"PARENT\", \"PARTITION\", \"PASCAL\", \"PCTFREE\", \"PIPE\", \"PIPELINED\", \"PLS_INTEGER\", \"PLUGGABLE\", \"POSITIVE\", \"POSITIVEN\", \"PRAGMA\", \"PRECISION\", \"PRIOR\", \"PRIVATE\", \"PROCEDURE\", \"PUBLIC\", \"RAISE\", \"RANGE\", \"RAW\", \"READ\", \"REAL\", \"RECORD\", \"REF\", \"REFERENCE\", \"RELEASE\", \"RELIES_ON\", \"REM\", \"REMAINDER\", \"RENAME\", \"RESOURCE\", \"RESULT_CACHE\", \"RESULT\", \"RETURN\", \"RETURNING\", \"REVERSE\", \"REVOKE\", \"ROLLBACK\", \"ROW\", \"ROWID\", \"ROWNUM\", \"ROWTYPE\", \"SAMPLE\", \"SAVE\", \"SAVEPOINT\", \"SB1\", \"SB2\", \"SB4\", \"SECOND\", \"SEGMENT\", \"SELF\", \"SEPARATE\", \"SEQUENCE\", \"SERIALIZABLE\", \"SHARE\", \"SHORT\", \"SIZE_T\", \"SIZE\", \"SMALLINT\", \"SOME\", \"SPACE\", \"SPARSE\", \"SQL\", \"SQLCODE\", \"SQLDATA\", \"SQLERRM\", \"SQLNAME\", \"SQLSTATE\", \"STANDARD\", \"START\", \"STATIC\", \"STDDEV\", \"STORED\", \"STRING\", \"STRUCT\", \"STYLE\", \"SUBMULTISET\", \"SUBPARTITION\", \"SUBSTITUTABLE\", \"SUBTYPE\", \"SUCCESSFUL\", \"SUM\", \"SYNONYM\", \"SYSDATE\", \"TABAUTH\", \"TABLE\", \"TDO\", \"THE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TIMEZONE_ABBR\", \"TIMEZONE_HOUR\", \"TIMEZONE_MINUTE\", \"TIMEZONE_REGION\", \"TO\", \"TRAILING\", \"TRANSACTION\", \"TRANSACTIONAL\", \"TRIGGER\", \"TRUE\", \"TRUSTED\", \"TYPE\", \"UB1\", \"UB2\", \"UB4\", \"UID\", \"UNDER\", \"UNIQUE\", \"UNPLUG\", \"UNSIGNED\", \"UNTRUSTED\", \"USE\", \"USER\", \"USING\", \"VALIDATE\", \"VALIST\", \"VALUE\", \"VARCHAR\", \"VARCHAR2\", \"VARIABLE\", \"VARIANCE\", \"VARRAY\", \"VARYING\", \"VIEW\", \"VIEWS\", \"VOID\", \"WHENEVER\", \"WHILE\", \"WITH\", \"WORK\", \"WRAPPED\", \"WRITE\", \"YEAR\", \"ZONE\"];\n\nvar reservedToplevelWords = [\"ADD\", \"ALTER COLUMN\", \"ALTER TABLE\", \"BEGIN\", \"CONNECT BY\", \"DECLARE\", \"DELETE FROM\", \"DELETE\", \"END\", \"EXCEPT\", \"EXCEPTION\", \"FETCH FIRST\", \"FROM\", \"GROUP BY\", \"HAVING\", \"INSERT INTO\", \"INSERT\", \"INTERSECT\", \"LIMIT\", \"LOOP\", \"MODIFY\", \"ORDER BY\", \"SELECT\", \"SET CURRENT SCHEMA\", \"SET SCHEMA\", \"SET\", \"START WITH\", \"UNION ALL\", \"UNION\", \"UPDATE\", \"VALUES\", \"WHERE\"];\n\nvar reservedNewlineWords = [\"AND\", \"CROSS APPLY\", \"CROSS JOIN\", \"ELSE\", \"END\", \"INNER JOIN\", \"JOIN\", \"LEFT JOIN\", \"LEFT OUTER JOIN\", \"OR\", \"OUTER APPLY\", \"OUTER JOIN\", \"RIGHT JOIN\", \"RIGHT OUTER JOIN\", \"WHEN\", \"XOR\"];\n\nvar tokenizer = void 0;\n\nvar PlSqlFormatter = function () {\n    /**\n     * @param {Object} cfg Different set of configurations\n     */\n    function PlSqlFormatter(cfg) {\n        _classCallCheck(this, PlSqlFormatter);\n\n        this.cfg = cfg;\n    }\n\n    /**\n     * Format the whitespace in a PL/SQL string to make it easier to read\n     *\n     * @param {String} query The PL/SQL string\n     * @return {String} formatted string\n     */\n\n\n    PlSqlFormatter.prototype.format = function format(query) {\n        if (!tokenizer) {\n            tokenizer = new _Tokenizer2[\"default\"]({\n                reservedWords: reservedWords,\n                reservedToplevelWords: reservedToplevelWords,\n                reservedNewlineWords: reservedNewlineWords,\n                stringTypes: [\"\\\"\\\"\", \"N''\", \"''\", \"``\"],\n                openParens: [\"(\", \"CASE\"],\n                closeParens: [\")\", \"END\"],\n                indexedPlaceholderTypes: [\"?\"],\n                namedPlaceholderTypes: [\":\"],\n                lineCommentTypes: [\"--\"],\n                specialWordChars: [\"_\", \"$\", \"#\", \".\", \"@\"]\n            });\n        }\n        return new _Formatter2[\"default\"](this.cfg, tokenizer).format(query);\n    };\n\n    return PlSqlFormatter;\n}();\n\nexports[\"default\"] = PlSqlFormatter;\nmodule.exports = exports[\"default\"];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}}],"sources":{"../node_modules/sql-formatter/lib/languages/PlSqlFormatter.js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _Formatter = require(\"../core/Formatter\");\n\nvar _Formatter2 = _interopRequireDefault(_Formatter);\n\nvar _Tokenizer = require(\"../core/Tokenizer\");\n\nvar _Tokenizer2 = _interopRequireDefault(_Tokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar reservedWords = [\"A\", \"ACCESSIBLE\", \"AGENT\", \"AGGREGATE\", \"ALL\", \"ALTER\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"AT\", \"ATTRIBUTE\", \"AUTHID\", \"AVG\", \"BETWEEN\", \"BFILE_BASE\", \"BINARY_INTEGER\", \"BINARY\", \"BLOB_BASE\", \"BLOCK\", \"BODY\", \"BOOLEAN\", \"BOTH\", \"BOUND\", \"BULK\", \"BY\", \"BYTE\", \"C\", \"CALL\", \"CALLING\", \"CASCADE\", \"CASE\", \"CHAR_BASE\", \"CHAR\", \"CHARACTER\", \"CHARSET\", \"CHARSETFORM\", \"CHARSETID\", \"CHECK\", \"CLOB_BASE\", \"CLONE\", \"CLOSE\", \"CLUSTER\", \"CLUSTERS\", \"COALESCE\", \"COLAUTH\", \"COLLECT\", \"COLUMNS\", \"COMMENT\", \"COMMIT\", \"COMMITTED\", \"COMPILED\", \"COMPRESS\", \"CONNECT\", \"CONSTANT\", \"CONSTRUCTOR\", \"CONTEXT\", \"CONTINUE\", \"CONVERT\", \"COUNT\", \"CRASH\", \"CREATE\", \"CREDENTIAL\", \"CURRENT\", \"CURRVAL\", \"CURSOR\", \"CUSTOMDATUM\", \"DANGLING\", \"DATA\", \"DATE_BASE\", \"DATE\", \"DAY\", \"DECIMAL\", \"DEFAULT\", \"DEFINE\", \"DELETE\", \"DESC\", \"DETERMINISTIC\", \"DIRECTORY\", \"DISTINCT\", \"DO\", \"DOUBLE\", \"DROP\", \"DURATION\", \"ELEMENT\", \"ELSIF\", \"EMPTY\", \"ESCAPE\", \"EXCEPTIONS\", \"EXCLUSIVE\", \"EXECUTE\", \"EXISTS\", \"EXIT\", \"EXTENDS\", \"EXTERNAL\", \"EXTRACT\", \"FALSE\", \"FETCH\", \"FINAL\", \"FIRST\", \"FIXED\", \"FLOAT\", \"FOR\", \"FORALL\", \"FORCE\", \"FROM\", \"FUNCTION\", \"GENERAL\", \"GOTO\", \"GRANT\", \"GROUP\", \"HASH\", \"HEAP\", \"HIDDEN\", \"HOUR\", \"IDENTIFIED\", \"IF\", \"IMMEDIATE\", \"IN\", \"INCLUDING\", \"INDEX\", \"INDEXES\", \"INDICATOR\", \"INDICES\", \"INFINITE\", \"INSTANTIABLE\", \"INT\", \"INTEGER\", \"INTERFACE\", \"INTERVAL\", \"INTO\", \"INVALIDATE\", \"IS\", \"ISOLATION\", \"JAVA\", \"LANGUAGE\", \"LARGE\", \"LEADING\", \"LENGTH\", \"LEVEL\", \"LIBRARY\", \"LIKE\", \"LIKE2\", \"LIKE4\", \"LIKEC\", \"LIMITED\", \"LOCAL\", \"LOCK\", \"LONG\", \"MAP\", \"MAX\", \"MAXLEN\", \"MEMBER\", \"MERGE\", \"MIN\", \"MINUS\", \"MINUTE\", \"MLSLABEL\", \"MOD\", \"MODE\", \"MONTH\", \"MULTISET\", \"NAME\", \"NAN\", \"NATIONAL\", \"NATIVE\", \"NATURAL\", \"NATURALN\", \"NCHAR\", \"NEW\", \"NEXTVAL\", \"NOCOMPRESS\", \"NOCOPY\", \"NOT\", \"NOWAIT\", \"NULL\", \"NULLIF\", \"NUMBER_BASE\", \"NUMBER\", \"OBJECT\", \"OCICOLL\", \"OCIDATE\", \"OCIDATETIME\", \"OCIDURATION\", \"OCIINTERVAL\", \"OCILOBLOCATOR\", \"OCINUMBER\", \"OCIRAW\", \"OCIREF\", \"OCIREFCURSOR\", \"OCIROWID\", \"OCISTRING\", \"OCITYPE\", \"OF\", \"OLD\", \"ON\", \"ONLY\", \"OPAQUE\", \"OPEN\", \"OPERATOR\", \"OPTION\", \"ORACLE\", \"ORADATA\", \"ORDER\", \"ORGANIZATION\", \"ORLANY\", \"ORLVARY\", \"OTHERS\", \"OUT\", \"OVERLAPS\", \"OVERRIDING\", \"PACKAGE\", \"PARALLEL_ENABLE\", \"PARAMETER\", \"PARAMETERS\", \"PARENT\", \"PARTITION\", \"PASCAL\", \"PCTFREE\", \"PIPE\", \"PIPELINED\", \"PLS_INTEGER\", \"PLUGGABLE\", \"POSITIVE\", \"POSITIVEN\", \"PRAGMA\", \"PRECISION\", \"PRIOR\", \"PRIVATE\", \"PROCEDURE\", \"PUBLIC\", \"RAISE\", \"RANGE\", \"RAW\", \"READ\", \"REAL\", \"RECORD\", \"REF\", \"REFERENCE\", \"RELEASE\", \"RELIES_ON\", \"REM\", \"REMAINDER\", \"RENAME\", \"RESOURCE\", \"RESULT_CACHE\", \"RESULT\", \"RETURN\", \"RETURNING\", \"REVERSE\", \"REVOKE\", \"ROLLBACK\", \"ROW\", \"ROWID\", \"ROWNUM\", \"ROWTYPE\", \"SAMPLE\", \"SAVE\", \"SAVEPOINT\", \"SB1\", \"SB2\", \"SB4\", \"SECOND\", \"SEGMENT\", \"SELF\", \"SEPARATE\", \"SEQUENCE\", \"SERIALIZABLE\", \"SHARE\", \"SHORT\", \"SIZE_T\", \"SIZE\", \"SMALLINT\", \"SOME\", \"SPACE\", \"SPARSE\", \"SQL\", \"SQLCODE\", \"SQLDATA\", \"SQLERRM\", \"SQLNAME\", \"SQLSTATE\", \"STANDARD\", \"START\", \"STATIC\", \"STDDEV\", \"STORED\", \"STRING\", \"STRUCT\", \"STYLE\", \"SUBMULTISET\", \"SUBPARTITION\", \"SUBSTITUTABLE\", \"SUBTYPE\", \"SUCCESSFUL\", \"SUM\", \"SYNONYM\", \"SYSDATE\", \"TABAUTH\", \"TABLE\", \"TDO\", \"THE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TIMEZONE_ABBR\", \"TIMEZONE_HOUR\", \"TIMEZONE_MINUTE\", \"TIMEZONE_REGION\", \"TO\", \"TRAILING\", \"TRANSACTION\", \"TRANSACTIONAL\", \"TRIGGER\", \"TRUE\", \"TRUSTED\", \"TYPE\", \"UB1\", \"UB2\", \"UB4\", \"UID\", \"UNDER\", \"UNIQUE\", \"UNPLUG\", \"UNSIGNED\", \"UNTRUSTED\", \"USE\", \"USER\", \"USING\", \"VALIDATE\", \"VALIST\", \"VALUE\", \"VARCHAR\", \"VARCHAR2\", \"VARIABLE\", \"VARIANCE\", \"VARRAY\", \"VARYING\", \"VIEW\", \"VIEWS\", \"VOID\", \"WHENEVER\", \"WHILE\", \"WITH\", \"WORK\", \"WRAPPED\", \"WRITE\", \"YEAR\", \"ZONE\"];\n\nvar reservedToplevelWords = [\"ADD\", \"ALTER COLUMN\", \"ALTER TABLE\", \"BEGIN\", \"CONNECT BY\", \"DECLARE\", \"DELETE FROM\", \"DELETE\", \"END\", \"EXCEPT\", \"EXCEPTION\", \"FETCH FIRST\", \"FROM\", \"GROUP BY\", \"HAVING\", \"INSERT INTO\", \"INSERT\", \"INTERSECT\", \"LIMIT\", \"LOOP\", \"MODIFY\", \"ORDER BY\", \"SELECT\", \"SET CURRENT SCHEMA\", \"SET SCHEMA\", \"SET\", \"START WITH\", \"UNION ALL\", \"UNION\", \"UPDATE\", \"VALUES\", \"WHERE\"];\n\nvar reservedNewlineWords = [\"AND\", \"CROSS APPLY\", \"CROSS JOIN\", \"ELSE\", \"END\", \"INNER JOIN\", \"JOIN\", \"LEFT JOIN\", \"LEFT OUTER JOIN\", \"OR\", \"OUTER APPLY\", \"OUTER JOIN\", \"RIGHT JOIN\", \"RIGHT OUTER JOIN\", \"WHEN\", \"XOR\"];\n\nvar tokenizer = void 0;\n\nvar PlSqlFormatter = function () {\n    /**\n     * @param {Object} cfg Different set of configurations\n     */\n    function PlSqlFormatter(cfg) {\n        _classCallCheck(this, PlSqlFormatter);\n\n        this.cfg = cfg;\n    }\n\n    /**\n     * Format the whitespace in a PL/SQL string to make it easier to read\n     *\n     * @param {String} query The PL/SQL string\n     * @return {String} formatted string\n     */\n\n\n    PlSqlFormatter.prototype.format = function format(query) {\n        if (!tokenizer) {\n            tokenizer = new _Tokenizer2[\"default\"]({\n                reservedWords: reservedWords,\n                reservedToplevelWords: reservedToplevelWords,\n                reservedNewlineWords: reservedNewlineWords,\n                stringTypes: [\"\\\"\\\"\", \"N''\", \"''\", \"``\"],\n                openParens: [\"(\", \"CASE\"],\n                closeParens: [\")\", \"END\"],\n                indexedPlaceholderTypes: [\"?\"],\n                namedPlaceholderTypes: [\":\"],\n                lineCommentTypes: [\"--\"],\n                specialWordChars: [\"_\", \"$\", \"#\", \".\", \"@\"]\n            });\n        }\n        return new _Formatter2[\"default\"](this.cfg, tokenizer).format(query);\n    };\n\n    return PlSqlFormatter;\n}();\n\nexports[\"default\"] = PlSqlFormatter;\nmodule.exports = exports[\"default\"];"},"lineCount":65}},"error":null,"hash":"94b8948ebc96338cce857d87658703ed","cacheData":{"env":{}}}