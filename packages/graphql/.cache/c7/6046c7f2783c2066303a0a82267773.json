{"id":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","dependencies":[{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/package.json","includedInParent":true,"mtime":1581593944909},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/package.json","includedInParent":true,"mtime":1580380995860},{"name":"../core/Formatter","loc":{"line":5,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/languages/Db2Formatter.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/Formatter.js"},{"name":"../core/Tokenizer","loc":{"line":9,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/languages/Db2Formatter.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/Tokenizer.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _Formatter = require(\"../core/Formatter\");\n\nvar _Formatter2 = _interopRequireDefault(_Formatter);\n\nvar _Tokenizer = require(\"../core/Tokenizer\");\n\nvar _Tokenizer2 = _interopRequireDefault(_Tokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar reservedWords = [\"ABS\", \"ACTIVATE\", \"ALIAS\", \"ALL\", \"ALLOCATE\", \"ALLOW\", \"ALTER\", \"ANY\", \"ARE\", \"ARRAY\", \"AS\", \"ASC\", \"ASENSITIVE\", \"ASSOCIATE\", \"ASUTIME\", \"ASYMMETRIC\", \"AT\", \"ATOMIC\", \"ATTRIBUTES\", \"AUDIT\", \"AUTHORIZATION\", \"AUX\", \"AUXILIARY\", \"AVG\", \"BEFORE\", \"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BLOB\", \"BOOLEAN\", \"BOTH\", \"BUFFERPOOL\", \"BY\", \"CACHE\", \"CALL\", \"CALLED\", \"CAPTURE\", \"CARDINALITY\", \"CASCADED\", \"CASE\", \"CAST\", \"CCSID\", \"CEIL\", \"CEILING\", \"CHAR\", \"CHARACTER\", \"CHARACTER_LENGTH\", \"CHAR_LENGTH\", \"CHECK\", \"CLOB\", \"CLONE\", \"CLOSE\", \"CLUSTER\", \"COALESCE\", \"COLLATE\", \"COLLECT\", \"COLLECTION\", \"COLLID\", \"COLUMN\", \"COMMENT\", \"COMMIT\", \"CONCAT\", \"CONDITION\", \"CONNECT\", \"CONNECTION\", \"CONSTRAINT\", \"CONTAINS\", \"CONTINUE\", \"CONVERT\", \"CORR\", \"CORRESPONDING\", \"COUNT\", \"COUNT_BIG\", \"COVAR_POP\", \"COVAR_SAMP\", \"CREATE\", \"CROSS\", \"CUBE\", \"CUME_DIST\", \"CURRENT\", \"CURRENT_DATE\", \"CURRENT_DEFAULT_TRANSFORM_GROUP\", \"CURRENT_LC_CTYPE\", \"CURRENT_PATH\", \"CURRENT_ROLE\", \"CURRENT_SCHEMA\", \"CURRENT_SERVER\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_TIMEZONE\", \"CURRENT_TRANSFORM_GROUP_FOR_TYPE\", \"CURRENT_USER\", \"CURSOR\", \"CYCLE\", \"DATA\", \"DATABASE\", \"DATAPARTITIONNAME\", \"DATAPARTITIONNUM\", \"DATE\", \"DAY\", \"DAYS\", \"DB2GENERAL\", \"DB2GENRL\", \"DB2SQL\", \"DBINFO\", \"DBPARTITIONNAME\", \"DBPARTITIONNUM\", \"DEALLOCATE\", \"DEC\", \"DECIMAL\", \"DECLARE\", \"DEFAULT\", \"DEFAULTS\", \"DEFINITION\", \"DELETE\", \"DENSERANK\", \"DENSE_RANK\", \"DEREF\", \"DESCRIBE\", \"DESCRIPTOR\", \"DETERMINISTIC\", \"DIAGNOSTICS\", \"DISABLE\", \"DISALLOW\", \"DISCONNECT\", \"DISTINCT\", \"DO\", \"DOCUMENT\", \"DOUBLE\", \"DROP\", \"DSSIZE\", \"DYNAMIC\", \"EACH\", \"EDITPROC\", \"ELEMENT\", \"ELSE\", \"ELSEIF\", \"ENABLE\", \"ENCODING\", \"ENCRYPTION\", \"END\", \"END-EXEC\", \"ENDING\", \"ERASE\", \"ESCAPE\", \"EVERY\", \"EXCEPTION\", \"EXCLUDING\", \"EXCLUSIVE\", \"EXEC\", \"EXECUTE\", \"EXISTS\", \"EXIT\", \"EXP\", \"EXPLAIN\", \"EXTENDED\", \"EXTERNAL\", \"EXTRACT\", \"FALSE\", \"FENCED\", \"FETCH\", \"FIELDPROC\", \"FILE\", \"FILTER\", \"FINAL\", \"FIRST\", \"FLOAT\", \"FLOOR\", \"FOR\", \"FOREIGN\", \"FREE\", \"FULL\", \"FUNCTION\", \"FUSION\", \"GENERAL\", \"GENERATED\", \"GET\", \"GLOBAL\", \"GOTO\", \"GRANT\", \"GRAPHIC\", \"GROUP\", \"GROUPING\", \"HANDLER\", \"HASH\", \"HASHED_VALUE\", \"HINT\", \"HOLD\", \"HOUR\", \"HOURS\", \"IDENTITY\", \"IF\", \"IMMEDIATE\", \"IN\", \"INCLUDING\", \"INCLUSIVE\", \"INCREMENT\", \"INDEX\", \"INDICATOR\", \"INDICATORS\", \"INF\", \"INFINITY\", \"INHERIT\", \"INNER\", \"INOUT\", \"INSENSITIVE\", \"INSERT\", \"INT\", \"INTEGER\", \"INTEGRITY\", \"INTERSECTION\", \"INTERVAL\", \"INTO\", \"IS\", \"ISOBID\", \"ISOLATION\", \"ITERATE\", \"JAR\", \"JAVA\", \"KEEP\", \"KEY\", \"LABEL\", \"LANGUAGE\", \"LARGE\", \"LATERAL\", \"LC_CTYPE\", \"LEADING\", \"LEAVE\", \"LEFT\", \"LIKE\", \"LINKTYPE\", \"LN\", \"LOCAL\", \"LOCALDATE\", \"LOCALE\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCATOR\", \"LOCATORS\", \"LOCK\", \"LOCKMAX\", \"LOCKSIZE\", \"LONG\", \"LOOP\", \"LOWER\", \"MAINTAINED\", \"MATCH\", \"MATERIALIZED\", \"MAX\", \"MAXVALUE\", \"MEMBER\", \"MERGE\", \"METHOD\", \"MICROSECOND\", \"MICROSECONDS\", \"MIN\", \"MINUTE\", \"MINUTES\", \"MINVALUE\", \"MOD\", \"MODE\", \"MODIFIES\", \"MODULE\", \"MONTH\", \"MONTHS\", \"MULTISET\", \"NAN\", \"NATIONAL\", \"NATURAL\", \"NCHAR\", \"NCLOB\", \"NEW\", \"NEW_TABLE\", \"NEXTVAL\", \"NO\", \"NOCACHE\", \"NOCYCLE\", \"NODENAME\", \"NODENUMBER\", \"NOMAXVALUE\", \"NOMINVALUE\", \"NONE\", \"NOORDER\", \"NORMALIZE\", \"NORMALIZED\", \"NOT\", \"NULL\", \"NULLIF\", \"NULLS\", \"NUMERIC\", \"NUMPARTS\", \"OBID\", \"OCTET_LENGTH\", \"OF\", \"OFFSET\", \"OLD\", \"OLD_TABLE\", \"ON\", \"ONLY\", \"OPEN\", \"OPTIMIZATION\", \"OPTIMIZE\", \"OPTION\", \"ORDER\", \"OUT\", \"OUTER\", \"OVER\", \"OVERLAPS\", \"OVERLAY\", \"OVERRIDING\", \"PACKAGE\", \"PADDED\", \"PAGESIZE\", \"PARAMETER\", \"PART\", \"PARTITION\", \"PARTITIONED\", \"PARTITIONING\", \"PARTITIONS\", \"PASSWORD\", \"PATH\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"PERCENT_RANK\", \"PIECESIZE\", \"PLAN\", \"POSITION\", \"POWER\", \"PRECISION\", \"PREPARE\", \"PREVVAL\", \"PRIMARY\", \"PRIQTY\", \"PRIVILEGES\", \"PROCEDURE\", \"PROGRAM\", \"PSID\", \"PUBLIC\", \"QUERY\", \"QUERYNO\", \"RANGE\", \"RANK\", \"READ\", \"READS\", \"REAL\", \"RECOVERY\", \"RECURSIVE\", \"REF\", \"REFERENCES\", \"REFERENCING\", \"REFRESH\", \"REGR_AVGX\", \"REGR_AVGY\", \"REGR_COUNT\", \"REGR_INTERCEPT\", \"REGR_R2\", \"REGR_SLOPE\", \"REGR_SXX\", \"REGR_SXY\", \"REGR_SYY\", \"RELEASE\", \"RENAME\", \"REPEAT\", \"RESET\", \"RESIGNAL\", \"RESTART\", \"RESTRICT\", \"RESULT\", \"RESULT_SET_LOCATOR\", \"RETURN\", \"RETURNS\", \"REVOKE\", \"RIGHT\", \"ROLE\", \"ROLLBACK\", \"ROLLUP\", \"ROUND_CEILING\", \"ROUND_DOWN\", \"ROUND_FLOOR\", \"ROUND_HALF_DOWN\", \"ROUND_HALF_EVEN\", \"ROUND_HALF_UP\", \"ROUND_UP\", \"ROUTINE\", \"ROW\", \"ROWNUMBER\", \"ROWS\", \"ROWSET\", \"ROW_NUMBER\", \"RRN\", \"RUN\", \"SAVEPOINT\", \"SCHEMA\", \"SCOPE\", \"SCRATCHPAD\", \"SCROLL\", \"SEARCH\", \"SECOND\", \"SECONDS\", \"SECQTY\", \"SECURITY\", \"SENSITIVE\", \"SEQUENCE\", \"SESSION\", \"SESSION_USER\", \"SIGNAL\", \"SIMILAR\", \"SIMPLE\", \"SMALLINT\", \"SNAN\", \"SOME\", \"SOURCE\", \"SPECIFIC\", \"SPECIFICTYPE\", \"SQL\", \"SQLEXCEPTION\", \"SQLID\", \"SQLSTATE\", \"SQLWARNING\", \"SQRT\", \"STACKED\", \"STANDARD\", \"START\", \"STARTING\", \"STATEMENT\", \"STATIC\", \"STATMENT\", \"STAY\", \"STDDEV_POP\", \"STDDEV_SAMP\", \"STOGROUP\", \"STORES\", \"STYLE\", \"SUBMULTISET\", \"SUBSTRING\", \"SUM\", \"SUMMARY\", \"SYMMETRIC\", \"SYNONYM\", \"SYSFUN\", \"SYSIBM\", \"SYSPROC\", \"SYSTEM\", \"SYSTEM_USER\", \"TABLE\", \"TABLESAMPLE\", \"TABLESPACE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TIMEZONE_HOUR\", \"TIMEZONE_MINUTE\", \"TO\", \"TRAILING\", \"TRANSACTION\", \"TRANSLATE\", \"TRANSLATION\", \"TREAT\", \"TRIGGER\", \"TRIM\", \"TRUE\", \"TRUNCATE\", \"TYPE\", \"UESCAPE\", \"UNDO\", \"UNIQUE\", \"UNKNOWN\", \"UNNEST\", \"UNTIL\", \"UPPER\", \"USAGE\", \"USER\", \"USING\", \"VALIDPROC\", \"VALUE\", \"VARCHAR\", \"VARIABLE\", \"VARIANT\", \"VARYING\", \"VAR_POP\", \"VAR_SAMP\", \"VCAT\", \"VERSION\", \"VIEW\", \"VOLATILE\", \"VOLUMES\", \"WHEN\", \"WHENEVER\", \"WHILE\", \"WIDTH_BUCKET\", \"WINDOW\", \"WITH\", \"WITHIN\", \"WITHOUT\", \"WLM\", \"WRITE\", \"XMLELEMENT\", \"XMLEXISTS\", \"XMLNAMESPACES\", \"YEAR\", \"YEARS\"];\n\nvar reservedToplevelWords = [\"ADD\", \"AFTER\", \"ALTER COLUMN\", \"ALTER TABLE\", \"DELETE FROM\", \"EXCEPT\", \"FETCH FIRST\", \"FROM\", \"GROUP BY\", \"GO\", \"HAVING\", \"INSERT INTO\", \"INTERSECT\", \"LIMIT\", \"ORDER BY\", \"SELECT\", \"SET CURRENT SCHEMA\", \"SET SCHEMA\", \"SET\", \"UNION ALL\", \"UPDATE\", \"VALUES\", \"WHERE\"];\n\nvar reservedNewlineWords = [\"AND\", \"CROSS JOIN\", \"INNER JOIN\", \"JOIN\", \"LEFT JOIN\", \"LEFT OUTER JOIN\", \"OR\", \"OUTER JOIN\", \"RIGHT JOIN\", \"RIGHT OUTER JOIN\"];\n\nvar tokenizer = void 0;\n\nvar Db2Formatter = function () {\n    /**\n     * @param {Object} cfg Different set of configurations\n     */\n    function Db2Formatter(cfg) {\n        _classCallCheck(this, Db2Formatter);\n\n        this.cfg = cfg;\n    }\n\n    /**\n     * Formats DB2 query to make it easier to read\n     *\n     * @param {String} query The DB2 query string\n     * @return {String} formatted string\n     */\n\n\n    Db2Formatter.prototype.format = function format(query) {\n        if (!tokenizer) {\n            tokenizer = new _Tokenizer2[\"default\"]({\n                reservedWords: reservedWords,\n                reservedToplevelWords: reservedToplevelWords,\n                reservedNewlineWords: reservedNewlineWords,\n                stringTypes: [\"\\\"\\\"\", \"''\", \"``\", \"[]\"],\n                openParens: [\"(\"],\n                closeParens: [\")\"],\n                indexedPlaceholderTypes: [\"?\"],\n                namedPlaceholderTypes: [\":\"],\n                lineCommentTypes: [\"--\"],\n                specialWordChars: [\"#\", \"@\"]\n            });\n        }\n        return new _Formatter2[\"default\"](this.cfg, tokenizer).format(query);\n    };\n\n    return Db2Formatter;\n}();\n\nexports[\"default\"] = Db2Formatter;\nmodule.exports = exports[\"default\"];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/Db2Formatter.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}}],"sources":{"../node_modules/sql-formatter/lib/languages/Db2Formatter.js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _Formatter = require(\"../core/Formatter\");\n\nvar _Formatter2 = _interopRequireDefault(_Formatter);\n\nvar _Tokenizer = require(\"../core/Tokenizer\");\n\nvar _Tokenizer2 = _interopRequireDefault(_Tokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar reservedWords = [\"ABS\", \"ACTIVATE\", \"ALIAS\", \"ALL\", \"ALLOCATE\", \"ALLOW\", \"ALTER\", \"ANY\", \"ARE\", \"ARRAY\", \"AS\", \"ASC\", \"ASENSITIVE\", \"ASSOCIATE\", \"ASUTIME\", \"ASYMMETRIC\", \"AT\", \"ATOMIC\", \"ATTRIBUTES\", \"AUDIT\", \"AUTHORIZATION\", \"AUX\", \"AUXILIARY\", \"AVG\", \"BEFORE\", \"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BLOB\", \"BOOLEAN\", \"BOTH\", \"BUFFERPOOL\", \"BY\", \"CACHE\", \"CALL\", \"CALLED\", \"CAPTURE\", \"CARDINALITY\", \"CASCADED\", \"CASE\", \"CAST\", \"CCSID\", \"CEIL\", \"CEILING\", \"CHAR\", \"CHARACTER\", \"CHARACTER_LENGTH\", \"CHAR_LENGTH\", \"CHECK\", \"CLOB\", \"CLONE\", \"CLOSE\", \"CLUSTER\", \"COALESCE\", \"COLLATE\", \"COLLECT\", \"COLLECTION\", \"COLLID\", \"COLUMN\", \"COMMENT\", \"COMMIT\", \"CONCAT\", \"CONDITION\", \"CONNECT\", \"CONNECTION\", \"CONSTRAINT\", \"CONTAINS\", \"CONTINUE\", \"CONVERT\", \"CORR\", \"CORRESPONDING\", \"COUNT\", \"COUNT_BIG\", \"COVAR_POP\", \"COVAR_SAMP\", \"CREATE\", \"CROSS\", \"CUBE\", \"CUME_DIST\", \"CURRENT\", \"CURRENT_DATE\", \"CURRENT_DEFAULT_TRANSFORM_GROUP\", \"CURRENT_LC_CTYPE\", \"CURRENT_PATH\", \"CURRENT_ROLE\", \"CURRENT_SCHEMA\", \"CURRENT_SERVER\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_TIMEZONE\", \"CURRENT_TRANSFORM_GROUP_FOR_TYPE\", \"CURRENT_USER\", \"CURSOR\", \"CYCLE\", \"DATA\", \"DATABASE\", \"DATAPARTITIONNAME\", \"DATAPARTITIONNUM\", \"DATE\", \"DAY\", \"DAYS\", \"DB2GENERAL\", \"DB2GENRL\", \"DB2SQL\", \"DBINFO\", \"DBPARTITIONNAME\", \"DBPARTITIONNUM\", \"DEALLOCATE\", \"DEC\", \"DECIMAL\", \"DECLARE\", \"DEFAULT\", \"DEFAULTS\", \"DEFINITION\", \"DELETE\", \"DENSERANK\", \"DENSE_RANK\", \"DEREF\", \"DESCRIBE\", \"DESCRIPTOR\", \"DETERMINISTIC\", \"DIAGNOSTICS\", \"DISABLE\", \"DISALLOW\", \"DISCONNECT\", \"DISTINCT\", \"DO\", \"DOCUMENT\", \"DOUBLE\", \"DROP\", \"DSSIZE\", \"DYNAMIC\", \"EACH\", \"EDITPROC\", \"ELEMENT\", \"ELSE\", \"ELSEIF\", \"ENABLE\", \"ENCODING\", \"ENCRYPTION\", \"END\", \"END-EXEC\", \"ENDING\", \"ERASE\", \"ESCAPE\", \"EVERY\", \"EXCEPTION\", \"EXCLUDING\", \"EXCLUSIVE\", \"EXEC\", \"EXECUTE\", \"EXISTS\", \"EXIT\", \"EXP\", \"EXPLAIN\", \"EXTENDED\", \"EXTERNAL\", \"EXTRACT\", \"FALSE\", \"FENCED\", \"FETCH\", \"FIELDPROC\", \"FILE\", \"FILTER\", \"FINAL\", \"FIRST\", \"FLOAT\", \"FLOOR\", \"FOR\", \"FOREIGN\", \"FREE\", \"FULL\", \"FUNCTION\", \"FUSION\", \"GENERAL\", \"GENERATED\", \"GET\", \"GLOBAL\", \"GOTO\", \"GRANT\", \"GRAPHIC\", \"GROUP\", \"GROUPING\", \"HANDLER\", \"HASH\", \"HASHED_VALUE\", \"HINT\", \"HOLD\", \"HOUR\", \"HOURS\", \"IDENTITY\", \"IF\", \"IMMEDIATE\", \"IN\", \"INCLUDING\", \"INCLUSIVE\", \"INCREMENT\", \"INDEX\", \"INDICATOR\", \"INDICATORS\", \"INF\", \"INFINITY\", \"INHERIT\", \"INNER\", \"INOUT\", \"INSENSITIVE\", \"INSERT\", \"INT\", \"INTEGER\", \"INTEGRITY\", \"INTERSECTION\", \"INTERVAL\", \"INTO\", \"IS\", \"ISOBID\", \"ISOLATION\", \"ITERATE\", \"JAR\", \"JAVA\", \"KEEP\", \"KEY\", \"LABEL\", \"LANGUAGE\", \"LARGE\", \"LATERAL\", \"LC_CTYPE\", \"LEADING\", \"LEAVE\", \"LEFT\", \"LIKE\", \"LINKTYPE\", \"LN\", \"LOCAL\", \"LOCALDATE\", \"LOCALE\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCATOR\", \"LOCATORS\", \"LOCK\", \"LOCKMAX\", \"LOCKSIZE\", \"LONG\", \"LOOP\", \"LOWER\", \"MAINTAINED\", \"MATCH\", \"MATERIALIZED\", \"MAX\", \"MAXVALUE\", \"MEMBER\", \"MERGE\", \"METHOD\", \"MICROSECOND\", \"MICROSECONDS\", \"MIN\", \"MINUTE\", \"MINUTES\", \"MINVALUE\", \"MOD\", \"MODE\", \"MODIFIES\", \"MODULE\", \"MONTH\", \"MONTHS\", \"MULTISET\", \"NAN\", \"NATIONAL\", \"NATURAL\", \"NCHAR\", \"NCLOB\", \"NEW\", \"NEW_TABLE\", \"NEXTVAL\", \"NO\", \"NOCACHE\", \"NOCYCLE\", \"NODENAME\", \"NODENUMBER\", \"NOMAXVALUE\", \"NOMINVALUE\", \"NONE\", \"NOORDER\", \"NORMALIZE\", \"NORMALIZED\", \"NOT\", \"NULL\", \"NULLIF\", \"NULLS\", \"NUMERIC\", \"NUMPARTS\", \"OBID\", \"OCTET_LENGTH\", \"OF\", \"OFFSET\", \"OLD\", \"OLD_TABLE\", \"ON\", \"ONLY\", \"OPEN\", \"OPTIMIZATION\", \"OPTIMIZE\", \"OPTION\", \"ORDER\", \"OUT\", \"OUTER\", \"OVER\", \"OVERLAPS\", \"OVERLAY\", \"OVERRIDING\", \"PACKAGE\", \"PADDED\", \"PAGESIZE\", \"PARAMETER\", \"PART\", \"PARTITION\", \"PARTITIONED\", \"PARTITIONING\", \"PARTITIONS\", \"PASSWORD\", \"PATH\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"PERCENT_RANK\", \"PIECESIZE\", \"PLAN\", \"POSITION\", \"POWER\", \"PRECISION\", \"PREPARE\", \"PREVVAL\", \"PRIMARY\", \"PRIQTY\", \"PRIVILEGES\", \"PROCEDURE\", \"PROGRAM\", \"PSID\", \"PUBLIC\", \"QUERY\", \"QUERYNO\", \"RANGE\", \"RANK\", \"READ\", \"READS\", \"REAL\", \"RECOVERY\", \"RECURSIVE\", \"REF\", \"REFERENCES\", \"REFERENCING\", \"REFRESH\", \"REGR_AVGX\", \"REGR_AVGY\", \"REGR_COUNT\", \"REGR_INTERCEPT\", \"REGR_R2\", \"REGR_SLOPE\", \"REGR_SXX\", \"REGR_SXY\", \"REGR_SYY\", \"RELEASE\", \"RENAME\", \"REPEAT\", \"RESET\", \"RESIGNAL\", \"RESTART\", \"RESTRICT\", \"RESULT\", \"RESULT_SET_LOCATOR\", \"RETURN\", \"RETURNS\", \"REVOKE\", \"RIGHT\", \"ROLE\", \"ROLLBACK\", \"ROLLUP\", \"ROUND_CEILING\", \"ROUND_DOWN\", \"ROUND_FLOOR\", \"ROUND_HALF_DOWN\", \"ROUND_HALF_EVEN\", \"ROUND_HALF_UP\", \"ROUND_UP\", \"ROUTINE\", \"ROW\", \"ROWNUMBER\", \"ROWS\", \"ROWSET\", \"ROW_NUMBER\", \"RRN\", \"RUN\", \"SAVEPOINT\", \"SCHEMA\", \"SCOPE\", \"SCRATCHPAD\", \"SCROLL\", \"SEARCH\", \"SECOND\", \"SECONDS\", \"SECQTY\", \"SECURITY\", \"SENSITIVE\", \"SEQUENCE\", \"SESSION\", \"SESSION_USER\", \"SIGNAL\", \"SIMILAR\", \"SIMPLE\", \"SMALLINT\", \"SNAN\", \"SOME\", \"SOURCE\", \"SPECIFIC\", \"SPECIFICTYPE\", \"SQL\", \"SQLEXCEPTION\", \"SQLID\", \"SQLSTATE\", \"SQLWARNING\", \"SQRT\", \"STACKED\", \"STANDARD\", \"START\", \"STARTING\", \"STATEMENT\", \"STATIC\", \"STATMENT\", \"STAY\", \"STDDEV_POP\", \"STDDEV_SAMP\", \"STOGROUP\", \"STORES\", \"STYLE\", \"SUBMULTISET\", \"SUBSTRING\", \"SUM\", \"SUMMARY\", \"SYMMETRIC\", \"SYNONYM\", \"SYSFUN\", \"SYSIBM\", \"SYSPROC\", \"SYSTEM\", \"SYSTEM_USER\", \"TABLE\", \"TABLESAMPLE\", \"TABLESPACE\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TIMEZONE_HOUR\", \"TIMEZONE_MINUTE\", \"TO\", \"TRAILING\", \"TRANSACTION\", \"TRANSLATE\", \"TRANSLATION\", \"TREAT\", \"TRIGGER\", \"TRIM\", \"TRUE\", \"TRUNCATE\", \"TYPE\", \"UESCAPE\", \"UNDO\", \"UNIQUE\", \"UNKNOWN\", \"UNNEST\", \"UNTIL\", \"UPPER\", \"USAGE\", \"USER\", \"USING\", \"VALIDPROC\", \"VALUE\", \"VARCHAR\", \"VARIABLE\", \"VARIANT\", \"VARYING\", \"VAR_POP\", \"VAR_SAMP\", \"VCAT\", \"VERSION\", \"VIEW\", \"VOLATILE\", \"VOLUMES\", \"WHEN\", \"WHENEVER\", \"WHILE\", \"WIDTH_BUCKET\", \"WINDOW\", \"WITH\", \"WITHIN\", \"WITHOUT\", \"WLM\", \"WRITE\", \"XMLELEMENT\", \"XMLEXISTS\", \"XMLNAMESPACES\", \"YEAR\", \"YEARS\"];\n\nvar reservedToplevelWords = [\"ADD\", \"AFTER\", \"ALTER COLUMN\", \"ALTER TABLE\", \"DELETE FROM\", \"EXCEPT\", \"FETCH FIRST\", \"FROM\", \"GROUP BY\", \"GO\", \"HAVING\", \"INSERT INTO\", \"INTERSECT\", \"LIMIT\", \"ORDER BY\", \"SELECT\", \"SET CURRENT SCHEMA\", \"SET SCHEMA\", \"SET\", \"UNION ALL\", \"UPDATE\", \"VALUES\", \"WHERE\"];\n\nvar reservedNewlineWords = [\"AND\", \"CROSS JOIN\", \"INNER JOIN\", \"JOIN\", \"LEFT JOIN\", \"LEFT OUTER JOIN\", \"OR\", \"OUTER JOIN\", \"RIGHT JOIN\", \"RIGHT OUTER JOIN\"];\n\nvar tokenizer = void 0;\n\nvar Db2Formatter = function () {\n    /**\n     * @param {Object} cfg Different set of configurations\n     */\n    function Db2Formatter(cfg) {\n        _classCallCheck(this, Db2Formatter);\n\n        this.cfg = cfg;\n    }\n\n    /**\n     * Formats DB2 query to make it easier to read\n     *\n     * @param {String} query The DB2 query string\n     * @return {String} formatted string\n     */\n\n\n    Db2Formatter.prototype.format = function format(query) {\n        if (!tokenizer) {\n            tokenizer = new _Tokenizer2[\"default\"]({\n                reservedWords: reservedWords,\n                reservedToplevelWords: reservedToplevelWords,\n                reservedNewlineWords: reservedNewlineWords,\n                stringTypes: [\"\\\"\\\"\", \"''\", \"``\", \"[]\"],\n                openParens: [\"(\"],\n                closeParens: [\")\"],\n                indexedPlaceholderTypes: [\"?\"],\n                namedPlaceholderTypes: [\":\"],\n                lineCommentTypes: [\"--\"],\n                specialWordChars: [\"#\", \"@\"]\n            });\n        }\n        return new _Formatter2[\"default\"](this.cfg, tokenizer).format(query);\n    };\n\n    return Db2Formatter;\n}();\n\nexports[\"default\"] = Db2Formatter;\nmodule.exports = exports[\"default\"];"},"lineCount":65}},"error":null,"hash":"c06a567cf0c191e1a813a55057e42f73","cacheData":{"env":{}}}