{"id":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","dependencies":[{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/package.json","includedInParent":true,"mtime":1581593944909},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/package.json","includedInParent":true,"mtime":1580380995860},{"name":"../core/Formatter","loc":{"line":5,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/Formatter.js"},{"name":"../core/Tokenizer","loc":{"line":9,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/Tokenizer.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _Formatter = require(\"../core/Formatter\");\n\nvar _Formatter2 = _interopRequireDefault(_Formatter);\n\nvar _Tokenizer = require(\"../core/Tokenizer\");\n\nvar _Tokenizer2 = _interopRequireDefault(_Tokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar reservedWords = [\"ACCESSIBLE\", \"ACTION\", \"AGAINST\", \"AGGREGATE\", \"ALGORITHM\", \"ALL\", \"ALTER\", \"ANALYSE\", \"ANALYZE\", \"AS\", \"ASC\", \"AUTOCOMMIT\", \"AUTO_INCREMENT\", \"BACKUP\", \"BEGIN\", \"BETWEEN\", \"BINLOG\", \"BOTH\", \"CASCADE\", \"CASE\", \"CHANGE\", \"CHANGED\", \"CHARACTER SET\", \"CHARSET\", \"CHECK\", \"CHECKSUM\", \"COLLATE\", \"COLLATION\", \"COLUMN\", \"COLUMNS\", \"COMMENT\", \"COMMIT\", \"COMMITTED\", \"COMPRESSED\", \"CONCURRENT\", \"CONSTRAINT\", \"CONTAINS\", \"CONVERT\", \"CREATE\", \"CROSS\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DATABASES\", \"DAY\", \"DAY_HOUR\", \"DAY_MINUTE\", \"DAY_SECOND\", \"DEFAULT\", \"DEFINER\", \"DELAYED\", \"DELETE\", \"DESC\", \"DESCRIBE\", \"DETERMINISTIC\", \"DISTINCT\", \"DISTINCTROW\", \"DIV\", \"DO\", \"DROP\", \"DUMPFILE\", \"DUPLICATE\", \"DYNAMIC\", \"ELSE\", \"ENCLOSED\", \"END\", \"ENGINE\", \"ENGINES\", \"ENGINE_TYPE\", \"ESCAPE\", \"ESCAPED\", \"EVENTS\", \"EXEC\", \"EXECUTE\", \"EXISTS\", \"EXPLAIN\", \"EXTENDED\", \"FAST\", \"FETCH\", \"FIELDS\", \"FILE\", \"FIRST\", \"FIXED\", \"FLUSH\", \"FOR\", \"FORCE\", \"FOREIGN\", \"FULL\", \"FULLTEXT\", \"FUNCTION\", \"GLOBAL\", \"GRANT\", \"GRANTS\", \"GROUP_CONCAT\", \"HEAP\", \"HIGH_PRIORITY\", \"HOSTS\", \"HOUR\", \"HOUR_MINUTE\", \"HOUR_SECOND\", \"IDENTIFIED\", \"IF\", \"IFNULL\", \"IGNORE\", \"IN\", \"INDEX\", \"INDEXES\", \"INFILE\", \"INSERT\", \"INSERT_ID\", \"INSERT_METHOD\", \"INTERVAL\", \"INTO\", \"INVOKER\", \"IS\", \"ISOLATION\", \"KEY\", \"KEYS\", \"KILL\", \"LAST_INSERT_ID\", \"LEADING\", \"LEVEL\", \"LIKE\", \"LINEAR\", \"LINES\", \"LOAD\", \"LOCAL\", \"LOCK\", \"LOCKS\", \"LOGS\", \"LOW_PRIORITY\", \"MARIA\", \"MASTER\", \"MASTER_CONNECT_RETRY\", \"MASTER_HOST\", \"MASTER_LOG_FILE\", \"MATCH\", \"MAX_CONNECTIONS_PER_HOUR\", \"MAX_QUERIES_PER_HOUR\", \"MAX_ROWS\", \"MAX_UPDATES_PER_HOUR\", \"MAX_USER_CONNECTIONS\", \"MEDIUM\", \"MERGE\", \"MINUTE\", \"MINUTE_SECOND\", \"MIN_ROWS\", \"MODE\", \"MODIFY\", \"MONTH\", \"MRG_MYISAM\", \"MYISAM\", \"NAMES\", \"NATURAL\", \"NOT\", \"NOW()\", \"NULL\", \"OFFSET\", \"ON DELETE\", \"ON UPDATE\", \"ON\", \"ONLY\", \"OPEN\", \"OPTIMIZE\", \"OPTION\", \"OPTIONALLY\", \"OUTFILE\", \"PACK_KEYS\", \"PAGE\", \"PARTIAL\", \"PARTITION\", \"PARTITIONS\", \"PASSWORD\", \"PRIMARY\", \"PRIVILEGES\", \"PROCEDURE\", \"PROCESS\", \"PROCESSLIST\", \"PURGE\", \"QUICK\", \"RAID0\", \"RAID_CHUNKS\", \"RAID_CHUNKSIZE\", \"RAID_TYPE\", \"RANGE\", \"READ\", \"READ_ONLY\", \"READ_WRITE\", \"REFERENCES\", \"REGEXP\", \"RELOAD\", \"RENAME\", \"REPAIR\", \"REPEATABLE\", \"REPLACE\", \"REPLICATION\", \"RESET\", \"RESTORE\", \"RESTRICT\", \"RETURN\", \"RETURNS\", \"REVOKE\", \"RLIKE\", \"ROLLBACK\", \"ROW\", \"ROWS\", \"ROW_FORMAT\", \"SECOND\", \"SECURITY\", \"SEPARATOR\", \"SERIALIZABLE\", \"SESSION\", \"SHARE\", \"SHOW\", \"SHUTDOWN\", \"SLAVE\", \"SONAME\", \"SOUNDS\", \"SQL\", \"SQL_AUTO_IS_NULL\", \"SQL_BIG_RESULT\", \"SQL_BIG_SELECTS\", \"SQL_BIG_TABLES\", \"SQL_BUFFER_RESULT\", \"SQL_CACHE\", \"SQL_CALC_FOUND_ROWS\", \"SQL_LOG_BIN\", \"SQL_LOG_OFF\", \"SQL_LOG_UPDATE\", \"SQL_LOW_PRIORITY_UPDATES\", \"SQL_MAX_JOIN_SIZE\", \"SQL_NO_CACHE\", \"SQL_QUOTE_SHOW_CREATE\", \"SQL_SAFE_UPDATES\", \"SQL_SELECT_LIMIT\", \"SQL_SLAVE_SKIP_COUNTER\", \"SQL_SMALL_RESULT\", \"SQL_WARNINGS\", \"START\", \"STARTING\", \"STATUS\", \"STOP\", \"STORAGE\", \"STRAIGHT_JOIN\", \"STRING\", \"STRIPED\", \"SUPER\", \"TABLE\", \"TABLES\", \"TEMPORARY\", \"TERMINATED\", \"THEN\", \"TO\", \"TRAILING\", \"TRANSACTIONAL\", \"TRUE\", \"TRUNCATE\", \"TYPE\", \"TYPES\", \"UNCOMMITTED\", \"UNIQUE\", \"UNLOCK\", \"UNSIGNED\", \"USAGE\", \"USE\", \"USING\", \"VARIABLES\", \"VIEW\", \"WHEN\", \"WITH\", \"WORK\", \"WRITE\", \"YEAR_MONTH\"];\n\nvar reservedToplevelWords = [\"ADD\", \"AFTER\", \"ALTER COLUMN\", \"ALTER TABLE\", \"DELETE FROM\", \"EXCEPT\", \"FETCH FIRST\", \"FROM\", \"GROUP BY\", \"GO\", \"HAVING\", \"INSERT INTO\", \"INSERT\", \"INTERSECT\", \"LIMIT\", \"MODIFY\", \"ORDER BY\", \"SELECT\", \"SET CURRENT SCHEMA\", \"SET SCHEMA\", \"SET\", \"UNION ALL\", \"UNION\", \"UPDATE\", \"VALUES\", \"WHERE\"];\n\nvar reservedNewlineWords = [\"AND\", \"CROSS APPLY\", \"CROSS JOIN\", \"ELSE\", \"INNER JOIN\", \"JOIN\", \"LEFT JOIN\", \"LEFT OUTER JOIN\", \"OR\", \"OUTER APPLY\", \"OUTER JOIN\", \"RIGHT JOIN\", \"RIGHT OUTER JOIN\", \"WHEN\", \"XOR\"];\n\nvar tokenizer = void 0;\n\nvar StandardSqlFormatter = function () {\n    /**\n     * @param {Object} cfg Different set of configurations\n     */\n    function StandardSqlFormatter(cfg) {\n        _classCallCheck(this, StandardSqlFormatter);\n\n        this.cfg = cfg;\n    }\n\n    /**\n     * Format the whitespace in a Standard SQL string to make it easier to read\n     *\n     * @param {String} query The Standard SQL string\n     * @return {String} formatted string\n     */\n\n\n    StandardSqlFormatter.prototype.format = function format(query) {\n        if (!tokenizer) {\n            tokenizer = new _Tokenizer2[\"default\"]({\n                reservedWords: reservedWords,\n                reservedToplevelWords: reservedToplevelWords,\n                reservedNewlineWords: reservedNewlineWords,\n                stringTypes: [\"\\\"\\\"\", \"N''\", \"''\", \"``\", \"[]\"],\n                openParens: [\"(\", \"CASE\"],\n                closeParens: [\")\", \"END\"],\n                indexedPlaceholderTypes: [\"?\"],\n                namedPlaceholderTypes: [\"@\", \":\"],\n                lineCommentTypes: [\"#\", \"--\"]\n            });\n        }\n        return new _Formatter2[\"default\"](this.cfg, tokenizer).format(query);\n    };\n\n    return StandardSqlFormatter;\n}();\n\nexports[\"default\"] = StandardSqlFormatter;\nmodule.exports = exports[\"default\"];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}}],"sources":{"../node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _Formatter = require(\"../core/Formatter\");\n\nvar _Formatter2 = _interopRequireDefault(_Formatter);\n\nvar _Tokenizer = require(\"../core/Tokenizer\");\n\nvar _Tokenizer2 = _interopRequireDefault(_Tokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar reservedWords = [\"ACCESSIBLE\", \"ACTION\", \"AGAINST\", \"AGGREGATE\", \"ALGORITHM\", \"ALL\", \"ALTER\", \"ANALYSE\", \"ANALYZE\", \"AS\", \"ASC\", \"AUTOCOMMIT\", \"AUTO_INCREMENT\", \"BACKUP\", \"BEGIN\", \"BETWEEN\", \"BINLOG\", \"BOTH\", \"CASCADE\", \"CASE\", \"CHANGE\", \"CHANGED\", \"CHARACTER SET\", \"CHARSET\", \"CHECK\", \"CHECKSUM\", \"COLLATE\", \"COLLATION\", \"COLUMN\", \"COLUMNS\", \"COMMENT\", \"COMMIT\", \"COMMITTED\", \"COMPRESSED\", \"CONCURRENT\", \"CONSTRAINT\", \"CONTAINS\", \"CONVERT\", \"CREATE\", \"CROSS\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DATABASES\", \"DAY\", \"DAY_HOUR\", \"DAY_MINUTE\", \"DAY_SECOND\", \"DEFAULT\", \"DEFINER\", \"DELAYED\", \"DELETE\", \"DESC\", \"DESCRIBE\", \"DETERMINISTIC\", \"DISTINCT\", \"DISTINCTROW\", \"DIV\", \"DO\", \"DROP\", \"DUMPFILE\", \"DUPLICATE\", \"DYNAMIC\", \"ELSE\", \"ENCLOSED\", \"END\", \"ENGINE\", \"ENGINES\", \"ENGINE_TYPE\", \"ESCAPE\", \"ESCAPED\", \"EVENTS\", \"EXEC\", \"EXECUTE\", \"EXISTS\", \"EXPLAIN\", \"EXTENDED\", \"FAST\", \"FETCH\", \"FIELDS\", \"FILE\", \"FIRST\", \"FIXED\", \"FLUSH\", \"FOR\", \"FORCE\", \"FOREIGN\", \"FULL\", \"FULLTEXT\", \"FUNCTION\", \"GLOBAL\", \"GRANT\", \"GRANTS\", \"GROUP_CONCAT\", \"HEAP\", \"HIGH_PRIORITY\", \"HOSTS\", \"HOUR\", \"HOUR_MINUTE\", \"HOUR_SECOND\", \"IDENTIFIED\", \"IF\", \"IFNULL\", \"IGNORE\", \"IN\", \"INDEX\", \"INDEXES\", \"INFILE\", \"INSERT\", \"INSERT_ID\", \"INSERT_METHOD\", \"INTERVAL\", \"INTO\", \"INVOKER\", \"IS\", \"ISOLATION\", \"KEY\", \"KEYS\", \"KILL\", \"LAST_INSERT_ID\", \"LEADING\", \"LEVEL\", \"LIKE\", \"LINEAR\", \"LINES\", \"LOAD\", \"LOCAL\", \"LOCK\", \"LOCKS\", \"LOGS\", \"LOW_PRIORITY\", \"MARIA\", \"MASTER\", \"MASTER_CONNECT_RETRY\", \"MASTER_HOST\", \"MASTER_LOG_FILE\", \"MATCH\", \"MAX_CONNECTIONS_PER_HOUR\", \"MAX_QUERIES_PER_HOUR\", \"MAX_ROWS\", \"MAX_UPDATES_PER_HOUR\", \"MAX_USER_CONNECTIONS\", \"MEDIUM\", \"MERGE\", \"MINUTE\", \"MINUTE_SECOND\", \"MIN_ROWS\", \"MODE\", \"MODIFY\", \"MONTH\", \"MRG_MYISAM\", \"MYISAM\", \"NAMES\", \"NATURAL\", \"NOT\", \"NOW()\", \"NULL\", \"OFFSET\", \"ON DELETE\", \"ON UPDATE\", \"ON\", \"ONLY\", \"OPEN\", \"OPTIMIZE\", \"OPTION\", \"OPTIONALLY\", \"OUTFILE\", \"PACK_KEYS\", \"PAGE\", \"PARTIAL\", \"PARTITION\", \"PARTITIONS\", \"PASSWORD\", \"PRIMARY\", \"PRIVILEGES\", \"PROCEDURE\", \"PROCESS\", \"PROCESSLIST\", \"PURGE\", \"QUICK\", \"RAID0\", \"RAID_CHUNKS\", \"RAID_CHUNKSIZE\", \"RAID_TYPE\", \"RANGE\", \"READ\", \"READ_ONLY\", \"READ_WRITE\", \"REFERENCES\", \"REGEXP\", \"RELOAD\", \"RENAME\", \"REPAIR\", \"REPEATABLE\", \"REPLACE\", \"REPLICATION\", \"RESET\", \"RESTORE\", \"RESTRICT\", \"RETURN\", \"RETURNS\", \"REVOKE\", \"RLIKE\", \"ROLLBACK\", \"ROW\", \"ROWS\", \"ROW_FORMAT\", \"SECOND\", \"SECURITY\", \"SEPARATOR\", \"SERIALIZABLE\", \"SESSION\", \"SHARE\", \"SHOW\", \"SHUTDOWN\", \"SLAVE\", \"SONAME\", \"SOUNDS\", \"SQL\", \"SQL_AUTO_IS_NULL\", \"SQL_BIG_RESULT\", \"SQL_BIG_SELECTS\", \"SQL_BIG_TABLES\", \"SQL_BUFFER_RESULT\", \"SQL_CACHE\", \"SQL_CALC_FOUND_ROWS\", \"SQL_LOG_BIN\", \"SQL_LOG_OFF\", \"SQL_LOG_UPDATE\", \"SQL_LOW_PRIORITY_UPDATES\", \"SQL_MAX_JOIN_SIZE\", \"SQL_NO_CACHE\", \"SQL_QUOTE_SHOW_CREATE\", \"SQL_SAFE_UPDATES\", \"SQL_SELECT_LIMIT\", \"SQL_SLAVE_SKIP_COUNTER\", \"SQL_SMALL_RESULT\", \"SQL_WARNINGS\", \"START\", \"STARTING\", \"STATUS\", \"STOP\", \"STORAGE\", \"STRAIGHT_JOIN\", \"STRING\", \"STRIPED\", \"SUPER\", \"TABLE\", \"TABLES\", \"TEMPORARY\", \"TERMINATED\", \"THEN\", \"TO\", \"TRAILING\", \"TRANSACTIONAL\", \"TRUE\", \"TRUNCATE\", \"TYPE\", \"TYPES\", \"UNCOMMITTED\", \"UNIQUE\", \"UNLOCK\", \"UNSIGNED\", \"USAGE\", \"USE\", \"USING\", \"VARIABLES\", \"VIEW\", \"WHEN\", \"WITH\", \"WORK\", \"WRITE\", \"YEAR_MONTH\"];\n\nvar reservedToplevelWords = [\"ADD\", \"AFTER\", \"ALTER COLUMN\", \"ALTER TABLE\", \"DELETE FROM\", \"EXCEPT\", \"FETCH FIRST\", \"FROM\", \"GROUP BY\", \"GO\", \"HAVING\", \"INSERT INTO\", \"INSERT\", \"INTERSECT\", \"LIMIT\", \"MODIFY\", \"ORDER BY\", \"SELECT\", \"SET CURRENT SCHEMA\", \"SET SCHEMA\", \"SET\", \"UNION ALL\", \"UNION\", \"UPDATE\", \"VALUES\", \"WHERE\"];\n\nvar reservedNewlineWords = [\"AND\", \"CROSS APPLY\", \"CROSS JOIN\", \"ELSE\", \"INNER JOIN\", \"JOIN\", \"LEFT JOIN\", \"LEFT OUTER JOIN\", \"OR\", \"OUTER APPLY\", \"OUTER JOIN\", \"RIGHT JOIN\", \"RIGHT OUTER JOIN\", \"WHEN\", \"XOR\"];\n\nvar tokenizer = void 0;\n\nvar StandardSqlFormatter = function () {\n    /**\n     * @param {Object} cfg Different set of configurations\n     */\n    function StandardSqlFormatter(cfg) {\n        _classCallCheck(this, StandardSqlFormatter);\n\n        this.cfg = cfg;\n    }\n\n    /**\n     * Format the whitespace in a Standard SQL string to make it easier to read\n     *\n     * @param {String} query The Standard SQL string\n     * @return {String} formatted string\n     */\n\n\n    StandardSqlFormatter.prototype.format = function format(query) {\n        if (!tokenizer) {\n            tokenizer = new _Tokenizer2[\"default\"]({\n                reservedWords: reservedWords,\n                reservedToplevelWords: reservedToplevelWords,\n                reservedNewlineWords: reservedNewlineWords,\n                stringTypes: [\"\\\"\\\"\", \"N''\", \"''\", \"``\", \"[]\"],\n                openParens: [\"(\", \"CASE\"],\n                closeParens: [\")\", \"END\"],\n                indexedPlaceholderTypes: [\"?\"],\n                namedPlaceholderTypes: [\"@\", \":\"],\n                lineCommentTypes: [\"#\", \"--\"]\n            });\n        }\n        return new _Formatter2[\"default\"](this.cfg, tokenizer).format(query);\n    };\n\n    return StandardSqlFormatter;\n}();\n\nexports[\"default\"] = StandardSqlFormatter;\nmodule.exports = exports[\"default\"];"},"lineCount":64}},"error":null,"hash":"8021e5d469545710016633353c1dcaca","cacheData":{"env":{}}}