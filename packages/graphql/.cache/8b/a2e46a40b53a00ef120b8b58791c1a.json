{"id":"../node_modules/@fullstack-one/core/dist/helpers.js","dependencies":[{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/package.json","includedInParent":true,"mtime":1581588025807},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/core/package.json","includedInParent":true,"mtime":1581593829119},{"name":"lodash","loc":{"line":11,"column":18},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/core/dist/helpers.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/lodash/lodash.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nfunction asyncForEach(array, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (let index = 0; index < array.length; index++) {\n            yield callback(array[index], index, array);\n        }\n    });\n}\nexports.asyncForEach = asyncForEach;\nexports.getPgSelector = (selector) => {\n    if (selector.toLowerCase() === selector) {\n        return selector;\n    }\n    return `\"${selector}\"`;\n};\nfunction getSchemas(pgClient) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { rows } = yield pgClient.query(`SELECT schema_name FROM information_schema.schemata;`);\n        const schemaNames = rows.map((row) => {\n            return row.schema_name;\n        });\n        return schemaNames;\n    });\n}\nexports.getSchemas = getSchemas;\nexports.GET_TABLES = `\n  SELECT \n    table_name \"name\"\n  FROM information_schema.tables \n  WHERE table_type = 'BASE TABLE' AND $1 @> ARRAY[table_schema::text];\n`;\nexports.getTables = (dbClient, schemas) => __awaiter(this, void 0, void 0, function* () {\n    const { rows } = yield dbClient.query(exports.GET_TABLES, [schemas]);\n    return rows.map((row) => {\n        return row.name;\n    });\n});\nexports.applyAutoAppConfigFixes = (appConfig, autoAppConfigFixes) => {\n    const newAppConfig = JSON.parse(JSON.stringify(appConfig));\n    autoAppConfigFixes.forEach((autoAppConfigFix) => {\n        _.set(newAppConfig, autoAppConfigFix.path, autoAppConfigFix.value);\n    });\n    return newAppConfig;\n};\nexports.castMigrationResult = (migrationResult) => {\n    const result = {\n        commands: migrationResult.commands,\n        errors: migrationResult.errors,\n        warnings: migrationResult.warnings\n    };\n    if (migrationResult.autoAppConfigFixes != null) {\n        result.autoAppConfigFixes = migrationResult.autoAppConfigFixes;\n    }\n    if (migrationResult.fixedAppConfig != null) {\n        result.fixedAppConfig = migrationResult.fixedAppConfig;\n    }\n    return result;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@fullstack-one/core/dist/helpers.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}}],"sources":{"../node_modules/@fullstack-one/core/dist/helpers.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nfunction asyncForEach(array, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (let index = 0; index < array.length; index++) {\n            yield callback(array[index], index, array);\n        }\n    });\n}\nexports.asyncForEach = asyncForEach;\nexports.getPgSelector = (selector) => {\n    if (selector.toLowerCase() === selector) {\n        return selector;\n    }\n    return `\"${selector}\"`;\n};\nfunction getSchemas(pgClient) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { rows } = yield pgClient.query(`SELECT schema_name FROM information_schema.schemata;`);\n        const schemaNames = rows.map((row) => {\n            return row.schema_name;\n        });\n        return schemaNames;\n    });\n}\nexports.getSchemas = getSchemas;\nexports.GET_TABLES = `\n  SELECT \n    table_name \"name\"\n  FROM information_schema.tables \n  WHERE table_type = 'BASE TABLE' AND $1 @> ARRAY[table_schema::text];\n`;\nexports.getTables = (dbClient, schemas) => __awaiter(this, void 0, void 0, function* () {\n    const { rows } = yield dbClient.query(exports.GET_TABLES, [schemas]);\n    return rows.map((row) => {\n        return row.name;\n    });\n});\nexports.applyAutoAppConfigFixes = (appConfig, autoAppConfigFixes) => {\n    const newAppConfig = JSON.parse(JSON.stringify(appConfig));\n    autoAppConfigFixes.forEach((autoAppConfigFix) => {\n        _.set(newAppConfig, autoAppConfigFix.path, autoAppConfigFix.value);\n    });\n    return newAppConfig;\n};\nexports.castMigrationResult = (migrationResult) => {\n    const result = {\n        commands: migrationResult.commands,\n        errors: migrationResult.errors,\n        warnings: migrationResult.warnings\n    };\n    if (migrationResult.autoAppConfigFixes != null) {\n        result.autoAppConfigFixes = migrationResult.autoAppConfigFixes;\n    }\n    if (migrationResult.fixedAppConfig != null) {\n        result.fixedAppConfig = migrationResult.fixedAppConfig;\n    }\n    return result;\n};\n"},"lineCount":69}},"error":null,"hash":"0eb3050bacd7b951e488861433a37dc7","cacheData":{"env":{}}}