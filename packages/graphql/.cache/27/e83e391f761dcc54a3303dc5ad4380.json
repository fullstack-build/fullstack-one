{"id":"../node_modules/typedi/error/CannotInjectError.js","dependencies":[{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/typedi/error/CannotInjectError.js.map","includedInParent":true,"mtime":1529567102000},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/package.json","includedInParent":true,"mtime":1581588025807},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/typedi/package.json","includedInParent":true,"mtime":1580380996280}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when DI cannot inject value into property decorated by @Inject decorator.\n */\nvar CannotInjectError = /** @class */ (function (_super) {\n    __extends(CannotInjectError, _super);\n    function CannotInjectError(target, propertyName) {\n        var _this = _super.call(this, \"Cannot inject value into \\\"\" + target.constructor.name + \".\" + propertyName + \"\\\". \" +\n            \"Please make sure you setup reflect-metadata properly and you don't use interfaces without service tokens as injection value.\") || this;\n        _this.name = \"ServiceNotFoundError\";\n        Object.setPrototypeOf(_this, CannotInjectError.prototype);\n        return _this;\n    }\n    return CannotInjectError;\n}(Error));\nexports.CannotInjectError = CannotInjectError;\n\n\n"},"sourceMaps":{"js":{"version":3,"sources":["../../src/error/CannotInjectError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;GAEG;AACH;IAAuC,qCAAK;IAGxC,2BAAY,MAAc,EAAE,YAAoB;QAAhD,YACI,kBACI,gCAA6B,MAAM,CAAC,WAAW,CAAC,IAAI,SAAI,YAAY,SAAK;YACzE,8HAA8H,CACjI,SAEJ;QARD,UAAI,GAAG,sBAAsB,CAAC;QAO1B,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;;IAC7D,CAAC;IAEL,wBAAC;AAAD,CAXA,AAWC,CAXsC,KAAK,GAW3C;AAXY,8CAAiB","file":"CannotInjectError.js","sourcesContent":["/**\n * Thrown when DI cannot inject value into property decorated by @Inject decorator.\n */\nexport class CannotInjectError extends Error {\n    name = \"ServiceNotFoundError\";\n\n    constructor(target: Object, propertyName: string) {\n        super(\n            `Cannot inject value into \"${target.constructor.name}.${propertyName}\". ` +\n            `Please make sure you setup reflect-metadata properly and you don't use interfaces without service tokens as injection value.`\n        );\n        Object.setPrototypeOf(this, CannotInjectError.prototype);\n    }\n\n}"],"sourceRoot":".."}},"error":null,"hash":"40dad82d2b90333d0864ca0e013ca10d","cacheData":{"env":{}}}