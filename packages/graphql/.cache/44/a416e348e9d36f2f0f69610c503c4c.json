{"id":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","dependencies":[{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/package.json","includedInParent":true,"mtime":1581593944909},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/package.json","includedInParent":true,"mtime":1580380995860},{"name":"../core/Formatter","loc":{"line":5,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/languages/N1qlFormatter.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/Formatter.js"},{"name":"../core/Tokenizer","loc":{"line":9,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/languages/N1qlFormatter.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/Tokenizer.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _Formatter = require(\"../core/Formatter\");\n\nvar _Formatter2 = _interopRequireDefault(_Formatter);\n\nvar _Tokenizer = require(\"../core/Tokenizer\");\n\nvar _Tokenizer2 = _interopRequireDefault(_Tokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar reservedWords = [\"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"BEGIN\", \"BETWEEN\", \"BINARY\", \"BOOLEAN\", \"BREAK\", \"BUCKET\", \"BUILD\", \"BY\", \"CALL\", \"CASE\", \"CAST\", \"CLUSTER\", \"COLLATE\", \"COLLECTION\", \"COMMIT\", \"CONNECT\", \"CONTINUE\", \"CORRELATE\", \"COVER\", \"CREATE\", \"DATABASE\", \"DATASET\", \"DATASTORE\", \"DECLARE\", \"DECREMENT\", \"DELETE\", \"DERIVED\", \"DESC\", \"DESCRIBE\", \"DISTINCT\", \"DO\", \"DROP\", \"EACH\", \"ELEMENT\", \"ELSE\", \"END\", \"EVERY\", \"EXCEPT\", \"EXCLUDE\", \"EXECUTE\", \"EXISTS\", \"EXPLAIN\", \"FALSE\", \"FETCH\", \"FIRST\", \"FLATTEN\", \"FOR\", \"FORCE\", \"FROM\", \"FUNCTION\", \"GRANT\", \"GROUP\", \"GSI\", \"HAVING\", \"IF\", \"IGNORE\", \"ILIKE\", \"IN\", \"INCLUDE\", \"INCREMENT\", \"INDEX\", \"INFER\", \"INLINE\", \"INNER\", \"INSERT\", \"INTERSECT\", \"INTO\", \"IS\", \"JOIN\", \"KEY\", \"KEYS\", \"KEYSPACE\", \"KNOWN\", \"LAST\", \"LEFT\", \"LET\", \"LETTING\", \"LIKE\", \"LIMIT\", \"LSM\", \"MAP\", \"MAPPING\", \"MATCHED\", \"MATERIALIZED\", \"MERGE\", \"MINUS\", \"MISSING\", \"NAMESPACE\", \"NEST\", \"NOT\", \"NULL\", \"NUMBER\", \"OBJECT\", \"OFFSET\", \"ON\", \"OPTION\", \"OR\", \"ORDER\", \"OUTER\", \"OVER\", \"PARSE\", \"PARTITION\", \"PASSWORD\", \"PATH\", \"POOL\", \"PREPARE\", \"PRIMARY\", \"PRIVATE\", \"PRIVILEGE\", \"PROCEDURE\", \"PUBLIC\", \"RAW\", \"REALM\", \"REDUCE\", \"RENAME\", \"RETURN\", \"RETURNING\", \"REVOKE\", \"RIGHT\", \"ROLE\", \"ROLLBACK\", \"SATISFIES\", \"SCHEMA\", \"SELECT\", \"SELF\", \"SEMI\", \"SET\", \"SHOW\", \"SOME\", \"START\", \"STATISTICS\", \"STRING\", \"SYSTEM\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"TRUE\", \"TRUNCATE\", \"UNDER\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UNNEST\", \"UNSET\", \"UPDATE\", \"UPSERT\", \"USE\", \"USER\", \"USING\", \"VALIDATE\", \"VALUE\", \"VALUED\", \"VALUES\", \"VIA\", \"VIEW\", \"WHEN\", \"WHERE\", \"WHILE\", \"WITH\", \"WITHIN\", \"WORK\", \"XOR\"];\n\nvar reservedToplevelWords = [\"DELETE FROM\", \"EXCEPT ALL\", \"EXCEPT\", \"EXPLAIN DELETE FROM\", \"EXPLAIN UPDATE\", \"EXPLAIN UPSERT\", \"FROM\", \"GROUP BY\", \"HAVING\", \"INFER\", \"INSERT INTO\", \"INTERSECT ALL\", \"INTERSECT\", \"LET\", \"LIMIT\", \"MERGE\", \"NEST\", \"ORDER BY\", \"PREPARE\", \"SELECT\", \"SET CURRENT SCHEMA\", \"SET SCHEMA\", \"SET\", \"UNION ALL\", \"UNION\", \"UNNEST\", \"UPDATE\", \"UPSERT\", \"USE KEYS\", \"VALUES\", \"WHERE\"];\n\nvar reservedNewlineWords = [\"AND\", \"INNER JOIN\", \"JOIN\", \"LEFT JOIN\", \"LEFT OUTER JOIN\", \"OR\", \"OUTER JOIN\", \"RIGHT JOIN\", \"RIGHT OUTER JOIN\", \"XOR\"];\n\nvar tokenizer = void 0;\n\nvar N1qlFormatter = function () {\n    /**\n     * @param {Object} cfg Different set of configurations\n     */\n    function N1qlFormatter(cfg) {\n        _classCallCheck(this, N1qlFormatter);\n\n        this.cfg = cfg;\n    }\n\n    /**\n     * Format the whitespace in a N1QL string to make it easier to read\n     *\n     * @param {String} query The N1QL string\n     * @return {String} formatted string\n     */\n\n\n    N1qlFormatter.prototype.format = function format(query) {\n        if (!tokenizer) {\n            tokenizer = new _Tokenizer2[\"default\"]({\n                reservedWords: reservedWords,\n                reservedToplevelWords: reservedToplevelWords,\n                reservedNewlineWords: reservedNewlineWords,\n                stringTypes: [\"\\\"\\\"\", \"''\", \"``\"],\n                openParens: [\"(\", \"[\", \"{\"],\n                closeParens: [\")\", \"]\", \"}\"],\n                namedPlaceholderTypes: [\"$\"],\n                lineCommentTypes: [\"#\", \"--\"]\n            });\n        }\n        return new _Formatter2[\"default\"](this.cfg, tokenizer).format(query);\n    };\n\n    return N1qlFormatter;\n}();\n\nexports[\"default\"] = N1qlFormatter;\nmodule.exports = exports[\"default\"];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"../node_modules/sql-formatter/lib/languages/N1qlFormatter.js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _Formatter = require(\"../core/Formatter\");\n\nvar _Formatter2 = _interopRequireDefault(_Formatter);\n\nvar _Tokenizer = require(\"../core/Tokenizer\");\n\nvar _Tokenizer2 = _interopRequireDefault(_Tokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar reservedWords = [\"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"BEGIN\", \"BETWEEN\", \"BINARY\", \"BOOLEAN\", \"BREAK\", \"BUCKET\", \"BUILD\", \"BY\", \"CALL\", \"CASE\", \"CAST\", \"CLUSTER\", \"COLLATE\", \"COLLECTION\", \"COMMIT\", \"CONNECT\", \"CONTINUE\", \"CORRELATE\", \"COVER\", \"CREATE\", \"DATABASE\", \"DATASET\", \"DATASTORE\", \"DECLARE\", \"DECREMENT\", \"DELETE\", \"DERIVED\", \"DESC\", \"DESCRIBE\", \"DISTINCT\", \"DO\", \"DROP\", \"EACH\", \"ELEMENT\", \"ELSE\", \"END\", \"EVERY\", \"EXCEPT\", \"EXCLUDE\", \"EXECUTE\", \"EXISTS\", \"EXPLAIN\", \"FALSE\", \"FETCH\", \"FIRST\", \"FLATTEN\", \"FOR\", \"FORCE\", \"FROM\", \"FUNCTION\", \"GRANT\", \"GROUP\", \"GSI\", \"HAVING\", \"IF\", \"IGNORE\", \"ILIKE\", \"IN\", \"INCLUDE\", \"INCREMENT\", \"INDEX\", \"INFER\", \"INLINE\", \"INNER\", \"INSERT\", \"INTERSECT\", \"INTO\", \"IS\", \"JOIN\", \"KEY\", \"KEYS\", \"KEYSPACE\", \"KNOWN\", \"LAST\", \"LEFT\", \"LET\", \"LETTING\", \"LIKE\", \"LIMIT\", \"LSM\", \"MAP\", \"MAPPING\", \"MATCHED\", \"MATERIALIZED\", \"MERGE\", \"MINUS\", \"MISSING\", \"NAMESPACE\", \"NEST\", \"NOT\", \"NULL\", \"NUMBER\", \"OBJECT\", \"OFFSET\", \"ON\", \"OPTION\", \"OR\", \"ORDER\", \"OUTER\", \"OVER\", \"PARSE\", \"PARTITION\", \"PASSWORD\", \"PATH\", \"POOL\", \"PREPARE\", \"PRIMARY\", \"PRIVATE\", \"PRIVILEGE\", \"PROCEDURE\", \"PUBLIC\", \"RAW\", \"REALM\", \"REDUCE\", \"RENAME\", \"RETURN\", \"RETURNING\", \"REVOKE\", \"RIGHT\", \"ROLE\", \"ROLLBACK\", \"SATISFIES\", \"SCHEMA\", \"SELECT\", \"SELF\", \"SEMI\", \"SET\", \"SHOW\", \"SOME\", \"START\", \"STATISTICS\", \"STRING\", \"SYSTEM\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"TRUE\", \"TRUNCATE\", \"UNDER\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UNNEST\", \"UNSET\", \"UPDATE\", \"UPSERT\", \"USE\", \"USER\", \"USING\", \"VALIDATE\", \"VALUE\", \"VALUED\", \"VALUES\", \"VIA\", \"VIEW\", \"WHEN\", \"WHERE\", \"WHILE\", \"WITH\", \"WITHIN\", \"WORK\", \"XOR\"];\n\nvar reservedToplevelWords = [\"DELETE FROM\", \"EXCEPT ALL\", \"EXCEPT\", \"EXPLAIN DELETE FROM\", \"EXPLAIN UPDATE\", \"EXPLAIN UPSERT\", \"FROM\", \"GROUP BY\", \"HAVING\", \"INFER\", \"INSERT INTO\", \"INTERSECT ALL\", \"INTERSECT\", \"LET\", \"LIMIT\", \"MERGE\", \"NEST\", \"ORDER BY\", \"PREPARE\", \"SELECT\", \"SET CURRENT SCHEMA\", \"SET SCHEMA\", \"SET\", \"UNION ALL\", \"UNION\", \"UNNEST\", \"UPDATE\", \"UPSERT\", \"USE KEYS\", \"VALUES\", \"WHERE\"];\n\nvar reservedNewlineWords = [\"AND\", \"INNER JOIN\", \"JOIN\", \"LEFT JOIN\", \"LEFT OUTER JOIN\", \"OR\", \"OUTER JOIN\", \"RIGHT JOIN\", \"RIGHT OUTER JOIN\", \"XOR\"];\n\nvar tokenizer = void 0;\n\nvar N1qlFormatter = function () {\n    /**\n     * @param {Object} cfg Different set of configurations\n     */\n    function N1qlFormatter(cfg) {\n        _classCallCheck(this, N1qlFormatter);\n\n        this.cfg = cfg;\n    }\n\n    /**\n     * Format the whitespace in a N1QL string to make it easier to read\n     *\n     * @param {String} query The N1QL string\n     * @return {String} formatted string\n     */\n\n\n    N1qlFormatter.prototype.format = function format(query) {\n        if (!tokenizer) {\n            tokenizer = new _Tokenizer2[\"default\"]({\n                reservedWords: reservedWords,\n                reservedToplevelWords: reservedToplevelWords,\n                reservedNewlineWords: reservedNewlineWords,\n                stringTypes: [\"\\\"\\\"\", \"''\", \"``\"],\n                openParens: [\"(\", \"[\", \"{\"],\n                closeParens: [\")\", \"]\", \"}\"],\n                namedPlaceholderTypes: [\"$\"],\n                lineCommentTypes: [\"#\", \"--\"]\n            });\n        }\n        return new _Formatter2[\"default\"](this.cfg, tokenizer).format(query);\n    };\n\n    return N1qlFormatter;\n}();\n\nexports[\"default\"] = N1qlFormatter;\nmodule.exports = exports[\"default\"];"},"lineCount":63}},"error":null,"hash":"cc53c64a16ab0767a03e3f220d7e1723","cacheData":{"env":{}}}