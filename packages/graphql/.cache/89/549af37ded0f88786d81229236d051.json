{"id":"../node_modules/@fullstack-one/logger/dist/index.js","dependencies":[{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/package.json","includedInParent":true,"mtime":1581588025807},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/logger/package.json","includedInParent":true,"mtime":1581588025153},{"name":"debug-logger","loc":{"line":15,"column":28},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/logger/dist/index.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/debug-logger/debug-logger.js"},{"name":"tracer","loc":{"line":16,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/logger/dist/index.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/tracer/lib/index.js"},{"name":"@fullstack-one/di","loc":{"line":17,"column":21},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/logger/dist/index.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/di/index.js"},{"name":"@fullstack-one/config","loc":{"line":18,"column":25},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/logger/dist/index.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/config/index.js"}],"generated":{"js":"var __dirname = \"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/@fullstack-one/logger/dist\";\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DebugLogger = require(\"debug-logger\");\nconst tracer_1 = require(\"tracer\");\nconst di_1 = require(\"@fullstack-one/di\");\nconst config_1 = require(\"@fullstack-one/config\");\nlet LoggerFactory = class LoggerFactory {\n    constructor(config) {\n        this.config = config.registerConfig(\"Logger\", `${__dirname}/../config`);\n    }\n    create(moduleName) {\n        const env = di_1.Container.get(\"ENVIRONMENT\");\n        // return createLogger(moduleName, this.config, env);\n        const levels = [\"trace\", \"debug\", \"info\", \"warn\", \"error\"];\n        const loggerName = `${env.namespace}:${env.nodeId}:${moduleName}`;\n        const debugLogger = DebugLogger(loggerName);\n        const tracerConfig = {\n            level: this.config.minLevel,\n            methods: levels,\n            inspectOpt: {\n                showHidden: true,\n                depth: null\n            },\n            transport: (logObject) => debugLogger[logObject.title](logObject.output)\n        };\n        const tracerLogger = tracer_1.colorConsole(tracerConfig);\n        return tracerLogger;\n    }\n};\nLoggerFactory = __decorate([\n    di_1.Service(),\n    __param(0, di_1.Inject((type) => config_1.Config)),\n    __metadata(\"design:paramtypes\", [config_1.Config])\n], LoggerFactory);\nexports.LoggerFactory = LoggerFactory;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@fullstack-one/logger/dist/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}}],"sources":{"../node_modules/@fullstack-one/logger/dist/index.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DebugLogger = require(\"debug-logger\");\nconst tracer_1 = require(\"tracer\");\nconst di_1 = require(\"@fullstack-one/di\");\nconst config_1 = require(\"@fullstack-one/config\");\nlet LoggerFactory = class LoggerFactory {\n    constructor(config) {\n        this.config = config.registerConfig(\"Logger\", `${__dirname}/../config`);\n    }\n    create(moduleName) {\n        const env = di_1.Container.get(\"ENVIRONMENT\");\n        // return createLogger(moduleName, this.config, env);\n        const levels = [\"trace\", \"debug\", \"info\", \"warn\", \"error\"];\n        const loggerName = `${env.namespace}:${env.nodeId}:${moduleName}`;\n        const debugLogger = DebugLogger(loggerName);\n        const tracerConfig = {\n            level: this.config.minLevel,\n            methods: levels,\n            inspectOpt: {\n                showHidden: true,\n                depth: null\n            },\n            transport: (logObject) => debugLogger[logObject.title](logObject.output)\n        };\n        const tracerLogger = tracer_1.colorConsole(tracerConfig);\n        return tracerLogger;\n    }\n};\nLoggerFactory = __decorate([\n    di_1.Service(),\n    __param(0, di_1.Inject((type) => config_1.Config)),\n    __metadata(\"design:paramtypes\", [config_1.Config])\n], LoggerFactory);\nexports.LoggerFactory = LoggerFactory;\n"},"lineCount":49}},"error":null,"hash":"8db21588867e2e4e459f25bcebcf1d00","cacheData":{"env":{}}}