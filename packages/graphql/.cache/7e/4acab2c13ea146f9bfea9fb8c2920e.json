{"id":"../node_modules/sql-formatter/lib/core/Params.js","dependencies":[{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/package.json","includedInParent":true,"mtime":1581593944909},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/package.json","includedInParent":true,"mtime":1580380995860}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Handles placeholder replacement with given params.\n */\nvar Params = function () {\n    /**\n     * @param {Object} params\n     */\n    function Params(params) {\n        _classCallCheck(this, Params);\n\n        this.params = params;\n        this.index = 0;\n    }\n\n    /**\n     * Returns param value that matches given placeholder with param key.\n     * @param {Object} token\n     *   @param {String} token.key Placeholder key\n     *   @param {String} token.value Placeholder value\n     * @return {String} param or token.value when params are missing\n     */\n\n\n    Params.prototype.get = function get(_ref) {\n        var key = _ref.key,\n            value = _ref.value;\n\n        if (!this.params) {\n            return value;\n        }\n        if (key) {\n            return this.params[key];\n        }\n        return this.params[this.index++];\n    };\n\n    return Params;\n}();\n\nexports[\"default\"] = Params;\nmodule.exports = exports[\"default\"];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/Params.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"../node_modules/sql-formatter/lib/core/Params.js":"\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Handles placeholder replacement with given params.\n */\nvar Params = function () {\n    /**\n     * @param {Object} params\n     */\n    function Params(params) {\n        _classCallCheck(this, Params);\n\n        this.params = params;\n        this.index = 0;\n    }\n\n    /**\n     * Returns param value that matches given placeholder with param key.\n     * @param {Object} token\n     *   @param {String} token.key Placeholder key\n     *   @param {String} token.value Placeholder value\n     * @return {String} param or token.value when params are missing\n     */\n\n\n    Params.prototype.get = function get(_ref) {\n        var key = _ref.key,\n            value = _ref.value;\n\n        if (!this.params) {\n            return value;\n        }\n        if (key) {\n            return this.params[key];\n        }\n        return this.params[this.index++];\n    };\n\n    return Params;\n}();\n\nexports[\"default\"] = Params;\nmodule.exports = exports[\"default\"];"},"lineCount":47}},"error":null,"hash":"618e8ab8d6a854ac9967b7ed004f2f85","cacheData":{"env":{}}}