{"id":"../node_modules/sql-formatter/lib/core/InlineBlock.js","dependencies":[{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/package.json","includedInParent":true,"mtime":1581593944909},{"name":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/package.json","includedInParent":true,"mtime":1580380995860},{"name":"./tokenTypes","loc":{"line":5,"column":26},"parent":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/InlineBlock.js","resolved":"/Users/hex0r/GitHub/fullstack-one/packages/graphql/node_modules/sql-formatter/lib/core/tokenTypes.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _tokenTypes = require(\"./tokenTypes\");\n\nvar _tokenTypes2 = _interopRequireDefault(_tokenTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar INLINE_MAX_LENGTH = 50;\n\n/**\n * Bookkeeper for inline blocks.\n *\n * Inline blocks are parenthized expressions that are shorter than INLINE_MAX_LENGTH.\n * These blocks are formatted on a single line, unlike longer parenthized\n * expressions where open-parenthesis causes newline and increase of indentation.\n */\n\nvar InlineBlock = function () {\n    function InlineBlock() {\n        _classCallCheck(this, InlineBlock);\n\n        this.level = 0;\n    }\n\n    /**\n     * Begins inline block when lookahead through upcoming tokens determines\n     * that the block would be smaller than INLINE_MAX_LENGTH.\n     * @param  {Object[]} tokens Array of all tokens\n     * @param  {Number} index Current token position\n     */\n\n\n    InlineBlock.prototype.beginIfPossible = function beginIfPossible(tokens, index) {\n        if (this.level === 0 && this.isInlineBlock(tokens, index)) {\n            this.level = 1;\n        } else if (this.level > 0) {\n            this.level++;\n        } else {\n            this.level = 0;\n        }\n    };\n\n    /**\n     * Finishes current inline block.\n     * There might be several nested ones.\n     */\n\n\n    InlineBlock.prototype.end = function end() {\n        this.level--;\n    };\n\n    /**\n     * True when inside an inline block\n     * @return {Boolean}\n     */\n\n\n    InlineBlock.prototype.isActive = function isActive() {\n        return this.level > 0;\n    };\n\n    // Check if this should be an inline parentheses block\n    // Examples are \"NOW()\", \"COUNT(*)\", \"int(10)\", key(`somecolumn`), DECIMAL(7,2)\n\n\n    InlineBlock.prototype.isInlineBlock = function isInlineBlock(tokens, index) {\n        var length = 0;\n        var level = 0;\n\n        for (var i = index; i < tokens.length; i++) {\n            var token = tokens[i];\n            length += token.value.length;\n\n            // Overran max length\n            if (length > INLINE_MAX_LENGTH) {\n                return false;\n            }\n\n            if (token.type === _tokenTypes2[\"default\"].OPEN_PAREN) {\n                level++;\n            } else if (token.type === _tokenTypes2[\"default\"].CLOSE_PAREN) {\n                level--;\n                if (level === 0) {\n                    return true;\n                }\n            }\n\n            if (this.isForbiddenToken(token)) {\n                return false;\n            }\n        }\n        return false;\n    };\n\n    // Reserved words that cause newlines, comments and semicolons\n    // are not allowed inside inline parentheses block\n\n\n    InlineBlock.prototype.isForbiddenToken = function isForbiddenToken(_ref) {\n        var type = _ref.type,\n            value = _ref.value;\n\n        return type === _tokenTypes2[\"default\"].RESERVED_TOPLEVEL || type === _tokenTypes2[\"default\"].RESERVED_NEWLINE || type === _tokenTypes2[\"default\"].COMMENT || type === _tokenTypes2[\"default\"].BLOCK_COMMENT || value === \";\";\n    };\n\n    return InlineBlock;\n}();\n\nexports[\"default\"] = InlineBlock;\nmodule.exports = exports[\"default\"];"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/sql-formatter/lib/core/InlineBlock.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}}],"sources":{"../node_modules/sql-formatter/lib/core/InlineBlock.js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _tokenTypes = require(\"./tokenTypes\");\n\nvar _tokenTypes2 = _interopRequireDefault(_tokenTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar INLINE_MAX_LENGTH = 50;\n\n/**\n * Bookkeeper for inline blocks.\n *\n * Inline blocks are parenthized expressions that are shorter than INLINE_MAX_LENGTH.\n * These blocks are formatted on a single line, unlike longer parenthized\n * expressions where open-parenthesis causes newline and increase of indentation.\n */\n\nvar InlineBlock = function () {\n    function InlineBlock() {\n        _classCallCheck(this, InlineBlock);\n\n        this.level = 0;\n    }\n\n    /**\n     * Begins inline block when lookahead through upcoming tokens determines\n     * that the block would be smaller than INLINE_MAX_LENGTH.\n     * @param  {Object[]} tokens Array of all tokens\n     * @param  {Number} index Current token position\n     */\n\n\n    InlineBlock.prototype.beginIfPossible = function beginIfPossible(tokens, index) {\n        if (this.level === 0 && this.isInlineBlock(tokens, index)) {\n            this.level = 1;\n        } else if (this.level > 0) {\n            this.level++;\n        } else {\n            this.level = 0;\n        }\n    };\n\n    /**\n     * Finishes current inline block.\n     * There might be several nested ones.\n     */\n\n\n    InlineBlock.prototype.end = function end() {\n        this.level--;\n    };\n\n    /**\n     * True when inside an inline block\n     * @return {Boolean}\n     */\n\n\n    InlineBlock.prototype.isActive = function isActive() {\n        return this.level > 0;\n    };\n\n    // Check if this should be an inline parentheses block\n    // Examples are \"NOW()\", \"COUNT(*)\", \"int(10)\", key(`somecolumn`), DECIMAL(7,2)\n\n\n    InlineBlock.prototype.isInlineBlock = function isInlineBlock(tokens, index) {\n        var length = 0;\n        var level = 0;\n\n        for (var i = index; i < tokens.length; i++) {\n            var token = tokens[i];\n            length += token.value.length;\n\n            // Overran max length\n            if (length > INLINE_MAX_LENGTH) {\n                return false;\n            }\n\n            if (token.type === _tokenTypes2[\"default\"].OPEN_PAREN) {\n                level++;\n            } else if (token.type === _tokenTypes2[\"default\"].CLOSE_PAREN) {\n                level--;\n                if (level === 0) {\n                    return true;\n                }\n            }\n\n            if (this.isForbiddenToken(token)) {\n                return false;\n            }\n        }\n        return false;\n    };\n\n    // Reserved words that cause newlines, comments and semicolons\n    // are not allowed inside inline parentheses block\n\n\n    InlineBlock.prototype.isForbiddenToken = function isForbiddenToken(_ref) {\n        var type = _ref.type,\n            value = _ref.value;\n\n        return type === _tokenTypes2[\"default\"].RESERVED_TOPLEVEL || type === _tokenTypes2[\"default\"].RESERVED_NEWLINE || type === _tokenTypes2[\"default\"].COMMENT || type === _tokenTypes2[\"default\"].BLOCK_COMMENT || value === \";\";\n    };\n\n    return InlineBlock;\n}();\n\nexports[\"default\"] = InlineBlock;\nmodule.exports = exports[\"default\"];"},"lineCount":116}},"error":null,"hash":"eb690a2decd0137023d128eb87fc7958","cacheData":{"env":{}}}